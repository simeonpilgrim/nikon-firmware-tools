# The main part of this file describes the D600 "B" firmware, ver 1.01a
#
# Use in Emulator or
# startDfr.bat -wstructure -wparameters -wint40 -wmemory -waddress -whexcode -x b910101a.dfr.txt -o b910101a.asm b910101a.bin

############################### File map: D600
-i 0x00040000-0x00BFFFFF=0x00000000

############################### Memory map:

-m 0x00040000-0x00040B03=CODE


# Table of offsets used by INT 0x40 :
-m 0x00040B04-0x00040C63=DATA:W


-m 0x00040C64-0x00040D41=CODE

# Softune RTOS Copyright :
-m 0x00040D42-0x00040DAD=DATA:L

# ITRON kernel code
-m 0x00040DAE-0x0008CAB1=CODE

# tblTaskData
-m 0x000D3938-0x000D41A7=DATA:L



# Interrupt vector table.
-t 0x000DFC00

-m 0x00100000-0x00286BB9=CODE

-m 0x003990AA-0x00466E0D=CODE

-m 0x005411C4-0x0054E3F1=CODE

############################### Symbols

# syscalls
-s 0x00040C64=sys_unsupported_function (R12 [OUT err_code])
-s 0x00040C68=sys_reserved_function (R12 [OUT err_code])
-s 0x000414E2=sys_set_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Set System Clock */)
-s 0x00041500=sys_get_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Get System Clock */)
-s 0x0004151E=sys_dly_tsk(R4 [IN dly_tim], R12 [OUT err_code] /* Delay Task */)
-s 0x0004157A=sys_def_cyc(R4 [IN cycno], R5 [IN ptr_to_pk_dcyc], R12 [OUT err_code] /* Define Cyclic Handler */)
-s 0x000415F8=sys_act_cyc(R4 [IN cycno], R5 [IN cycact], R12 [OUT err_code] /* Activate Cyclic Handler */)
-s 0x0004165E=sys_ref_cyc(R4 [IN ptr_to_pk_rcyc], R5 [IN cycno], R12 [OUT err_code] /* Get Cyclic Handler Status */)
-s 0x000416E0=sys_def_alm(R4 [IN almno], R5 [IN ptr_to_pk_dalm], R12 [OUT err_code] /* Define Alarm Handler */)
-s 0x0004176E=sys_ref_alm(R4 [IN ptr_to_pk_ralm], R5 [IN almno], R12 [OUT err_code] /* Get Alarm Handler Status */)
-s 0x000417E0=sys_sus_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Suspend Other Task */)
-s 0x00041864=sys_rsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Resume Suspended Task */)
-s 0x000418EC=sys_frsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Forcibly Resume suspended Task */)
-s 0x0004194C=sys_slp_tsk(R12 [OUT err_code] /* Sleep Task */)
-s 0x00041982=sys_tslp_tsk(R4 [IN timeout], R12 [OUT err_code] /* Sleep Task with Timeout */)
-s 0x00041A06=sys_wup_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Wakeup Other Task */)
-s 0x00041A68=sys_can_wup(R4 [IN tsk_id], R12 [OUT err_code], R13 [OUT wakeup_count] /* Cancel Wakeup Request */)
-s 0x00041ACC=sys_sta_tsk(R4 [IN tsk_id], R5 [IN tsk_param], R12 [OUT err_code] /* Start Task */)
-s 0x00041B4A=sys_ext_tsk(R12 [OUT err_code] /* Exit Issuing Task */)
-s 0x00041BA4=sys_ter_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Terminate Other Task */)
-s 0x00041C42=sys_dis_dsp(R12 [OUT err_code] /* Disable Dispatch */)
-s 0x00041C64=sys_ena_dsp(R12 [OUT err_code] /* Enable Dispatch */)
-s 0x00041C80=sys_chg_pri(R4 [IN tsk_id], R5 [IN tsk_prio], R12 [OUT err_code] /* Change Task Priority */)
-s 0x00041CE8=sys_rot_rdq(R4 [IN tsk_prio], R12 [OUT err_code] /* Rotate Tasks on the Ready Queue */)
-s 0x00041D4E=sys_rel_wai(R4 [IN tsk_id], R12 [OUT err_code] /* Release Wait of Other Task */)
-s 0x00041DD0=sys_get_tid(R12 [OUT err_code], R13 [OUT tsk_id] /* Get Task Identifier */)
-s 0x00041DF0=sys_ref_tsk(R4 [IN ptr_to_pk_rtsk], R5 [IN tsk_id], R12 [OUT err_code] /* Get Task Status */)
-s 0x00041EC4=sys_sig_sem(R4 [IN sem_id], R12 [OUT err_code] /* Signal Semaphore */)
-s 0x00041F06=sys_wai_sem(R4 [IN sem_id], R12 [OUT err_code] /* Wait on Semaphore */)
-s 0x00041F48=sys_preq_sem(R4 [IN sem_id], R12 [OUT err_code] /* Poll and request Semaphore */)
-s 0x00041F7C=sys_twai_sem(R4 [IN sem_id], R5 [IN timeout], R12 [OUT err_code] /* Wait on Semaphore with Timeout */)
-s 0x00042002=sys_ref_sem(R4 [IN ptr_to_pk_rsem], R5 [IN sem_id], R12 [OUT err_code] /* Get Semaphore Status */)
-s 0x0004204C=sys_set_flg(R4 [IN flag_id], R5 [IN set_pattern], R12 [OUT err_code] /* Set Eventflag */)
-s 0x000420E6=sys_clr_flg(R4 [IN flag_id], R5 [IN clr_pattern], R12 [OUT err_code] /* Clear Eventflag */)
-s 0x0004210E=sys_wai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag */)
-s 0x00042196=sys_pol_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag, polling */)
-s 0x000421EE=sys_twai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [IN timeout; OUT flag_pattern] /* Wait for Eventflag, with Timeout */)
-s 0x000422AC=sys_ref_flg(R4 [IN ptr_to_pk_rflg], R5 [IN flag_id], R12 [OUT err_code] /* Get Eventflag Status */)
-s 0x000422E2=sys_snd_msg(R4 [IN mailbox_id], R5 [IN ptr_to_pk_msg], R12 [OUT err_code] /* Send Message to Mailbox */)
-s 0x0004233C=sys_rcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox */)
-s 0x0004238C=sys_prcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, polling */)
-s 0x000423DA=sys_trcv_msg(R5 [IN mailbox_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, with Timeout */)
-s 0x0004245C=sys_ref_mbx(R4 [IN ptr_to_pk_rmbx], R5 [IN mailbox_id], R12 [OUT err_code] /* Get Mailbox Status */)
-s 0x000424E0=sys_get_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block */)
-s 0x000425D4=sys_pget_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block, polling */)
-s 0x000426D4=sys_rel_blk(R4 [IN mempool_id], R5 [OUT blk_start], R12 [OUT err_code] /* Release Variable-Sized Memory Block */)
-s 0x00042892=sys_ref_mpl(R4 [IN ptr_to_pk_rmempool], R5 [IN mempool_id], R12 [OUT err_code] /* Get Variable-Sized Memorypool Status */)
-s 0x0004290C=sys_get_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block */)
-s 0x00042968=sys_pget_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Poll and Get Fixed-Sized Memory Block */)
-s 0x000429AC=sys_tget_blf(R5 [IN mempool_f_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block with Timeout */)
-s 0x00042A4E=sys_rel_blf(R4 [IN mempool_f_id], R5 [OUT blk_f_start], R12 [OUT err_code] /* Release Fixed-Sized Memory Block */)
-s 0x00042B1C=sys_ref_mpf(R4 [IN ptr_to_pk_rmempool_f], R5 [IN mempool_f_id], R12 [OUT err_code] /* Get Fixed-Sized Memorypool Status */)
-s 0x00042B58=sys_loc_cpu(R12 [OUT err_code] /* Lock CPU */)
-s 0x00042B6C=sys_unl_cpu(R12 [OUT err_code] /* Unlock CPU */)
-s 0x00042B80=sys_chg_ilm(R4 [IN ilmask], R12 [OUT err_code] /* Change Interrupt Level Mask */)
-s 0x00042BA8=sys_ref_ilm(R12 [OUT err_code], R13 [OUT ilmask] /* Get Interrupt Level Mask */)
-s 0x00042BCC=sys_get_ver(R4 [IN ptr_to_pk_ver], R12 [OUT err_code] /* Get Version Information */)
-s 0x00042C08=sys_ref_sys(R4 [IN ptr_to_pk_rsys], R12 [OUT err_code] /* Get System Status */)

# Tasks
-s 0x00040EB0=SetupTCB
-s 0x00040DAE=StartIdleTask
-s 0x0015C10A=task_0x01
-s 0x00199308=task_0x02
-s 0x002693F8=task_0x03
-s 0x001B2876=task_0x04
-s 0x001AB850=task_0x05
-s 0x001AE1AA=task_0x06
-s 0x001C8CA4=task_0x07 (/* HDMI CECTask */)
-s 0x001C9FAE=task_0x08 (/* HDMI CEC timers */)
-s 0x001CA50E=task_0x09
-s 0x002644E0=task_0x0A
-s 0x001B79E4=task_0x0B
-s 0x001B9A40=task_0x0C
-s 0x001B53A6=task_0x0D
-s 0x001B4D50=task_0x0E
-s 0x001B2DB6=task_0x0F
-s 0x001BA174=task_0x10 (/* resolution converter #0 */)
-s 0x001BA6FC=task_0x11 (/* resolution converter #1 */)
-s 0x001BAC84=task_0x12 (/* resolution converter #2 */)
-s 0x00256EE8=task_0x13
-s 0x0025719E=task_0x14
-s 0x001B1402=task_0x15 (/* block transfer #0 */)
-s 0x001B1CDA=task_0x16 (/* block transfer #1 */)
-s 0x0017A40C=task_0x17
-s 0x00198D24=task_0x18
-s 0x0013D120=task_0x19 (/* AudioTask */ )
-s 0x001D56BC=task_0x1A (/* AudioSvcTask */ )
-s 0x0013ADA4=task_0x1B (/* AudioDmaTask */)
-s 0x00100108=task_0x1C( /* Autorun */)
-s 0x0012BE6C=task_0x1D
-s 0x0012FAEE=task_0x1E
-s 0x00254258=task_0x1F
-s 0x00253B70=task_0x20
-s 0x0019F3C8=task_0x21
-s 0x0013091A=task_0x22
-s 0x0026533A=task_0x23
-s 0x001E291E=task_0x24
-s 0x0024E0C8=task_0x25
-s 0x0024CF32=task_0x26
-s 0x00043820=task_0x27
-s 0x00190EFC=task_0x28
-s 0x00261FCA=task_0x29
-s 0x0026200A=task_0x2A
-s 0x00260266=task_0x2B
-s 0x00191DCE=task_0x2C
-s 0x00192628=task_0x2D
-s 0x001C6626=task_0x2E ( /* TftTask */ )
-s 0x001CFE80=task_0x2F ( /* TftBackLight */ )
-s 0x002635D4=task_0x30 ( /* TftSubTask */ )
-s 0x001CA8CE=task_0x31 ( /* HdmiTask */ )
-s 0x00263958=task_0x32 ( /* HdmiSubTask */ )
-s 0x00112112=task_0x33
-s 0x0011722C=task_0x34 ( /* movie ... */)
-s 0x0010D714=task_0x35
-s 0x00199BEA=task_0x36
-s 0x0015874A=task_0x37
-s 0x00409CEE=task_0x38
-s 0x0043DC8E=task_0x39
-s 0x0019A282=task_0x3A
-s 0x0014A1B4=task_0x3B
-s 0x001BFC6A=task_0x3C
-s 0x00156A1C=task_0x3D
-s 0x00156A7C=task_0x3E
-s 0x002511AC=task_0x3F
-s 0x00063482=task_0x40 ( /* movie encoder */)
-s 0x000626E0=task_0x41 ( /* movie decoder */)
-s 0x000694E8=task_0x42 ( /* movie ent */)
-s 0x00069530=task_0x43 ( /* movie display */)
-s 0x000694A0=task_0x44 ( /* movie cc */)
-s 0x0006DCEC=task_0x45 ( /* movie stream mbox */)
-s 0x0005FD52=task_0x46 ( /* movie record buttons */)
-s 0x0005E7C2=task_0x47 ( /* movie play buttons */)
-s 0x0005BBA8=task_0x48 ( /* movie ... */)
-s 0x001BFE88=task_0x49
-s 0x001BFE86=task_0x4A
-s 0x0024AF4A=task_0x4B
-s 0x00268928=task_0x4C
-s 0x0013D3EE=task_0x4D

# other
-s 0x00040A38=time(R4 [OUT time_in_ms])
-s 0x00041048=UpdateClock_ms()
-s 0x00041E44=krnl_TableGetRecord(R14 [IN ptr_table; OUT ptr_record], R4 [IN index_1_based])
-s 0x00063F14=movie_time_limit?
-s 0x0006415C=encode_mbox_write_error_callback
-s 0x000655A6=check_recording_time_over
-s 0x000655E8=check_media_max_time
-s 0x00069A8A=moviectl_fs_write_result
-s 0x0010F574=BFT481_s6
-s 0x0010FB90=BFT488_s1
-s 0x0010FC9C=BFT488_s0
-s 0x0010FCC2=BFT488_s6
-s 0x0010FD28=BFT488_s3
-s 0x0010FD54=BFT488_s2
-s 0x00110254=BFT481_s2
-s 0x001103A4=BFT481_s1
-s 0x00128A42=debug_GUIPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x0012AA76=BFTxx_s0_12AA76
-s 0x0012AA78=BFT508_s6
-s 0x0012ACFA=BFT509_s6
-s 0x0012AF1E=BFTxx_s2_12AF1E
-s 0x00131E9C=Axis_sub_131E9C
-s 0x00133F02=AudioCodec_Initialize
-s 0x00133F4C=I2C_Tx
-s 0x00134208=AudioC_TableSwitch
-s 0x00138704=AudioCodec_StartPlay
-s 0x0013A2E4=AudioDMAC_Init_Ch1
-s 0x0013A350=AudioDMAC_Init_Ch4
-s 0x0013A3BC=AudioDMAC_Init_Ch5
-s 0x0013A428=AudioDMAC_Start_Ch1
-s 0x0013A5CC=AudioDMAC_Start_Ch4
-s 0x0013A76A=AudioDMAC_Start_Ch5
-s 0x0013AD76=debug_AudioCodecPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x0013ADBC=DmaT_PostMessage
-s 0x0013AE00=DmaT_OnMsg
-s 0x0013B19A=AudioDmaTask_OnMessage_InitRec
-s 0x0013F62C=AudioApi_OnNotifyCompletion
-s 0x0016D878=dlist_init(R4 [IN ptr_to_list] /*creates sentinel node at the beginning*/)
-s 0x0016D880=dlist_is_empty(R4 [IN ptr_to_element; OUT is_empty] )
-s 0x0016D88C=dlist_insert_before(R4 [IN ptr_to_element], R5 [IN ptr_to_new_element] /*insert R5 before R4*/)
-s 0x0016D89C=dlist_insert_after(R4 [IN ptr_to_element], R5 [IN ptr_to_new_element] /*insert R5 after R4*/)
-s 0x0016D8AC=dlist_remove(R4 [IN ptr_to_element] /*remove R4 element*/)
-s 0x0016D8BC=dlist_remove_previous(R4 [IN ptr_to_element] /*remove item before R4*/)
-s 0x0016D8D2=dlist_remove_next(R4 [IN ptr_to_element] /*remove item after R4*/)
-s 0x001A228E=debug_print(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4] /* mostly for video */)
-s 0x001AABCE=Axis_StartTask
-s 0x001AAC1C=Axis_ExitTask
-s 0x001AAC54=Axis_Init
-s 0x001AAEC6=Axis_PowerOn
-s 0x001AB012=Axis_PowerOff
-s 0x001AB118=Axis_GetRawData_ST
-s 0x001AB260=Axis_ConvertToVector
-s 0x001AB352=Axis_PowerOn_0
-s 0x001AB450=Axis_PowerOff_0
-s 0x001AB552=Axis_GetRawData_MEMSIC
-s 0x001AB698=Axis_ConvertToVector_MEMSIC
-s 0x001ABEE6=Axis_FlashInf
-s 0x001AC05C=Axis_ReconvertAdjust
-s 0x001AC21E=Axis_ConvertAngle
-s 0x001AC7AC=Axis_sub_1AC7AC
-s 0x001AD0F4=Axis_ConvertAdjustLog
-s 0x001AD738=Axis_ConvertToFixedPoint16
-s 0x001AD8EE=Axis_ConvertToMountDirection
-s 0x001AD9E6=Axis_CalcAdjustParam
-s 0x001ADB58=Axis_SetAdjustParam
-s 0x001ADD08=Axis_ReadAdjustDataB
-s 0x001ADE2C=Axis_ReadAdjustData
-s 0x001AE3F2=debug_AxisPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001AE3FC=LowPriority_WaitSem(R4 [IN sem_id])
-s 0x001AE444=LowPriority_PollSem(R4 [IN sem_id; OUT error_code])
-s 0x001AE48C=LowPriority_SigSem(R4 [IN sem_id])
-s 0x001AE4F2=return_halfword9E47F334(R4 [OUT value])
-s 0x001AE546=crc16(R4 [IN size; OUT crc16], R5 [IN ptr_buf])
-s 0x001AEA7C=EncryptData(R4 [IN ptr_data], R5 [IN size], R6 [IN IV], R7 [IN ptr_key])
-s 0x001AF9D0=sys_getCurrentTaskID(R4 [OUT id])
-s 0x001AFAC0=callInttableFunction(R4 [IN fn_idx])
-s 0x001AFAE0=MessageLoopForever(R4 [IN ptr_to_mbx_id])
-s 0x001AFB08=call_MailboxPtr_SendMessage(R4 [IN ptr_ptr_to_mbx_id; OUT bool_OK], R5 [IN ptr_msg])
-s 0x001AFB1C=call_MessageLoopForever(R4 [IN ptr_to_mbx_id])
-s 0x001AFB2E=ccall_MailboxPtr_SendMessage(R4 [IN ptr_to_mbx_id; OUT bool_OK], R5 [IN ptr_msg])
-s 0x001BA18C=SendMessage_Task_0x10
-s 0x001BA714=SendMessage_Task_0x11
-s 0x001BAC9C=SendMessage_Task_0x12
-s 0x001BB24A=MailboxPtr_SendMessage(R4 [IN ptr_to_mbx_id; OUT bool_OK], R5 [IN ptr_msg])
-s 0x001BB26E=MailboxPtr_RecieveMessage(R4 [IN ptr_to_mbx_id; OUT bool_OK], R5 [IN ptr_to_msgptr])
-s 0x001BB358=EventPtr_SetPtr(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN flag_id])
-s 0x001BB362=EventPtr_SetFlag(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN set_pattern])
-s 0x001BB382=EventPtr_ClearFlag(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN clr_pattern])
-s 0x001BB3A8=EventPtr_WaitFlag_OR(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wai_pattern], R6 [IN ptr_out_pattern])
-s 0x001BB3D8=EventPtr_WaitFlag_AND(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wai_pattern], R6 [IN ptr_out_pattern])
-s 0x001BB408=EventPtr_WaitFlag_OR_Timeout(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wait_pattern], R6 [IN ptr_out_pattern], R7 [IN timeout])
-s 0x001BB440=EventPtr_WaitFlag_AND_Timeout(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wait_pattern], R6 [IN ptr_out_pattern], R7 [IN timeout])
-s 0x001BB478=EventPtr_PollFlag(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wait_pattern], R6 [IN ptr_out_pattern])
-s 0x001BB628=call_sys_ref_tsk(R4 [IN taskId; OUT state], R5 [IN ptr_pk_rtsk])
-s 0x001BB642=isTaskDormant(R4 [IN taskId; OUT state])
-s 0x001BB6FC=SemaphorePtr_SetID(R4 [IN ptr_to_id; OUT bool_OK], R5 [IN id])
-s 0x001BB706=SignalSemaphorePtr(R4 [IN ptr_to_id; OUT bool_OK])
-s 0x001BB726=WaitOnSemaphorePtr(R4 [IN ptr_to_id; OUT bool_OK])
-s 0x001BB74C=WaitOnSemaphoreTimeout(R4 [IN ptr_to_id; OUT bool_OK], R5 [IN timeout])
-s 0x001BB772=PollAndRequestSemaphore(R4 [IN ptr_to_id; OUT bool_OK])
-s 0x001BB7C0=QueueInit(R4 [IN ptr_queue], R5 [IN param], R6 [IN param], R7 [IN param])
-s 0x001BB876=QueueIsEmpty(R4 [IN ptr_queue; OUT is_empty])
-s 0x001BB8AE=QueueAdd(R4 [IN ptr_queue; OUT err], R5 [IN ptr_data])
-s 0x001BB91E=QueueTake(R4 [IN ptr_queue], R5 [IN ptr_data])
-s 0x001C206E=OnReceive_TxSet00
-s 0x001C2070=OnReceive_TxSet02
-s 0x001C207E=OnReceive_TxSet03
-s 0x001C208C=OnReceive_TxSet18
-s 0x001C209A=OnReceive_TxSet32
-s 0x001C20A8=OnReceive_TxSet11
-s 0x001C20B6=OnReceive_TxSet13
-s 0x001C20C4=OnReceive_TxSet14
-s 0x001C20D2=OnReceive_TxSet0C
-s 0x001C20E0=OnReceive_TxSet15
-s 0x001C20EE=OnReceive_TxSet16
-s 0x001C20FC=OnReceive_TxSet06
-s 0x001C210A=OnReceive_TxSet04
-s 0x001C2118=OnReceive_TxSet17
-s 0x001C2126=OnReceive_TxSet0B
-s 0x001C2134=OnReceive_TxSet31
-s 0x001C2142=OnReceive_TxSet12
-s 0x001C2150=OnReceive_TxSet23
-s 0x001C2152=OnReceive_TxSet05
-s 0x001C2160=OnReceive_TxSet1E
-s 0x001C216E=OnReceive_TxSet1D
-s 0x001C217C=OnReceive_TxSet07
-s 0x001C218A=OnReceive_TxSet08
-s 0x001C2198=OnReceive_TxSet09
-s 0x001C21A6=OnReceive_TxSet0A
-s 0x001C21B4=OnReceive_TxSet24
-s 0x001C21C2=OnReceive_TxSet25
-s 0x001C21D0=OnReceive_TxSet26
-s 0x001C21DE=OnReceive_TxSet27
-s 0x001C21EC=OnReceive_TxSet2C
-s 0x001C21FA=OnReceive_TxSet2B
-s 0x001C2208=OnReceive_TxSet0E
-s 0x001C22B6=OnReceive_TxSet1F
-s 0x001C22C4=OnReceive_TxSet20
-s 0x001C22D2=OnReceive_TxSet22
-s 0x001C22E0=OnReceive_TxSet21
-s 0x001C22EE=OnReceive_TxSet19
-s 0x001C22FC=OnReceive_TxSet1A
-s 0x001C230A=OnReceive_TxSet1B
-s 0x001C2318=OnReceive_TxSet1C
-s 0x001C2326=OnReceive_TxSet2D
-s 0x001C2334=OnReceive_TxSet30
-s 0x001C2342=OnReceive_TxSet0F
-s 0x001C2350=OnReceive_TxSet49
-s 0x001C235E=OnReceive_TxSet33
-s 0x001C236C=OnReceive_TxSet34
-s 0x001C237A=OnReceive_TxSet36
-s 0x001C2388=OnReceive_TxSet38
-s 0x001C2396=OnReceive_TxSet39
-s 0x001C23A4=OnReceive_TxSet3B
-s 0x001C23B2=OnReceive_TxSet3E
-s 0x001C23C0=OnReceive_TxSet3C
-s 0x001C23CE=OnReceive_TxSet41
-s 0x001C23DC=OnReceive_TxSet42
-s 0x001C23EA=OnReceive_TxSet3F
-s 0x001C23F8=OnReceive_TxSet40
-s 0x001C2406=OnReceive_TxSet48
-s 0x001C2414=OnReceive_TxSet4B
-s 0x001C2416=OnReceive_TxSet4E
-s 0x001C2424=OnReceive_TxSet44
-s 0x001C2432=OnReceive_TxSet4A
-s 0x001C2440=OnReceive_TxSet29
-s 0x001C244E=OnReceive_TxSet2A
-s 0x001C245C=OnReceive_TxSet4F
-s 0x001C246A=OnReceive_TxSet51
-s 0x001C2478=OnReceive_TxSet52
-s 0x001C247A=OnReceive_TxSet54
-s 0x001C247C=OnReceive_TxSet59
-s 0x001C247E=OnReceive_TxSet5B
-s 0x001C248C=OnReceive_TxSet5C
-s 0x001C249A=OnReceive_TxSet5D
-s 0x001C24A8=OnReceive_TxSet5F
-s 0x001C24B6=OnReceive_TxSet60
-s 0x001C9E98=debug_HDMICECPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001D0B92=debug_HDMIPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001D2C6E=debug_EepromPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001D42BE=debug_I2CPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001D5098=debug_AudioSvcPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001D5640=debug_AudioSvcTaskPrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x001D6ADE=sys_getAddressPtrCurrentTCB(R4 [OUT pCurrentTCB])
-s 0x001F0992=debug_TemperaturePrint(R4 [IN string], R5 [IN param2], R6 [IN param3], R7 [IN param4])
-s 0x0021759C=ptp_GetFCxxFExxTableAddress
-s 0x002175AE=ptpFunctionFC01
-s 0x0021767E=ptpFunctionFC02
-s 0x00217790=ptpFunctionFE01
-s 0x00217878=ptpFunctionFE02
-s 0x002179B0=ptpFunctionFE03
-s 0x00217A90=ptpFunctionFE04
-s 0x00217B94=ptpFunctionFE05
-s 0x00217CE0=ptpFunctionFD31
-s 0x00217D4C=ptpFunctionFE31
-s 0x00217DD4=ptpFunctionFC31
-s 0x00217EEE=ptpFunctionFC32
-s 0x00218050=ptpFunctionFDC1
-s 0x002180BA=ptpFunctionFEC1
-s 0x002181A6=ptpFunctionFCC1
-s 0x0021828E=ptpFunctionFD1C
-s 0x00218308=ptpFunctionFE1C
-s 0x00218448=ptpFunctionFD1D
-s 0x002184AC=ptpFunctionFE1D
-s 0x0021856E=ptpFunctionFC1D
-s 0x002185B8=ptpFunctionFD1E
-s 0x002186A8=ptpFunctionFE1E
-s 0x00218806=ptpFunctionFC41
-s 0x0021885A=ptpFunctionFC42
-s 0x002188AE=ptpFunctionFE41
-s 0x00218A88=ptpFunctionFE42
-s 0x00218BC6=ptpFunctionFC44
-s 0x00218C86=ptpFunctionFC45
-s 0x00218D74=ptpFunctionFC46
-s 0x00218E44=ptpFunctionFC47
-s 0x00218EB4=ptpFunctionFE4C
-s 0x00218F9A=ptpFunctionFC4D
-s 0x00218FE4=ptpFunctionFC51
-s 0x002191C6=ptpFunctionFC52
-s 0x00219224=ptpFunctionFC55
-s 0x0021939C=ptpFunctionFD56
-s 0x0021945E=ptpFunctionFC57
-s 0x00219510=ptpFunctionFE59
-s 0x0021959E=ptpFunctionFC59
-s 0x00219676=ptpFunctionFC5A
-s 0x00219994=ptpFunctionFC5B
-s 0x002199F4=ptpFunctionFC60
-s 0x00219A7C=ptpFunctionFC5C
-s 0x00219B18=ptpFunctionFD63
-s 0x00219BE0=ptpFunctionFE63
-s 0x00219D24=ptpFunctionFD80
-s 0x00219E20=ptpFunctionFC81
-s 0x00219EF4=ptpFunctionFC82
-s 0x00219F9C=ptpFunctionFC91
-s 0x0021A050=ptpFunctionFE91
-s 0x0021A110=ptpFunctionFE93
-s 0x0021A17A=ptpFunctionFC93
-s 0x0021A23A=ptpFunctionFC94
-s 0x0021A350=ptpFunctionFC96
-s 0x0021A3B0=ptpFunctionFC97
-s 0x0021A840=ptpFunctionFC98
-s 0x0021A948=ptpFunctionFD97
-s 0x0021AA8C=ptpFunctionFE97
-s 0x0021AB9A=ptpFunctionFE98
-s 0x0021AD1A=ptpFunctionFE99
-s 0x0021ADB0=ptpFunctionFE57
-s 0x0021AEDC=ptpFunctionFCA1
-s 0x0021B082=ptpFunctionFCA2
-s 0x0021B182=ptpFunctionFCA3
-s 0x0021B298=ptpFunctionFCA4
-s 0x0021B3B4=ptpFunctionFCA5
-s 0x0021B41A=ptpFunctionFCA6
-s 0x0021B516=ptpFunctionFCAA
-s 0x0021B62C=ptpFunctionFCAB
-s 0x0021B754=ptpFunctionFCAC
-s 0x0021B902=ptpFunctionFDB1
-s 0x0021B994=ptpFunctionFEB1
-s 0x0021BB52=ptpFunctionFDB2
-s 0x0021BD0C=ptpFunctionFEB2
-s 0x0021BDF6=ptpFunctionFDE1
-s 0x0021BE52=ptpFunctionFCFE
-s 0x0021C016=ptpFunctionFCFF
-s 0x0021C0BC=ptpFunctionFC70
-s 0x0021C194=ptpFunctionFD34
-s 0x0021C1D4=ptpFunctionFE34
-s 0x0021C338=ptpFunctionFD35
-s 0x0021C472=ptpFunctionFE35
-s 0x0021C638=ptpFunctionFC35
-s 0x0021C6EA=ptpFunctionFCAD
-s 0x0021C80A=ptpFunctionFCAE
-s 0x0021C9EE=ptpFunctionFDE3
-s 0x0021CAFA=ptpFunctionFEE3
-s 0x0021CCD0=ptpFunctionFC73
-s 0x0021D8EE=ptpFindFunctionCode
-s 0x0021DD2A=ptp_Get10xxTableAddress
-s 0x0021DD32=ptpFunction1001
-s 0x0021DF58=ptpFunction1002
-s 0x0021E13E=ptpFunction1003
-s 0x0021E2FA=ptpFunction1004
-s 0x0021E44C=ptpFunction1005
-s 0x0021E7DE=ptpFunction1006
-s 0x0021EF46=ptpFunction1007
-s 0x0021F9FA=ptpFunction1008
-s 0x002213B2=ptpFunction1009
-s 0x00221A7E=ptpFunction100A
-s 0x0022211C=ptpFunction100B
-s 0x00222CCA=ptpFunction100C
-s 0x00222FA8=ptpFunction100D
-s 0x00223110=ptpFunction100E
-s 0x00223EA2=ptpFunction100F
-s 0x002242E8=ptpFunction1014
-s 0x002243B8=ptpFunction1015
-s 0x00224488=ptpFunction1016
-s 0x002245C8=ptpFunction101B
-s 0x002271C0=ptp_ResponceError
-s 0x00228A7E=ptpFunction90C0
-s 0x00228B12=ptpFunction90C1
-s 0x00228FFC=ptpFunction90C2
-s 0x00229308=ptpFunction90C3
-s 0x00229870=ptpFunction90C4
-s 0x00229F70=ptpFunction90C7
-s 0x0022A0D8=ptpFunction90C8
-s 0x0022A338=ptpFunction90C9
-s 0x0022A3E8=ptpFunction90CA
-s 0x0022A4D8=ptpFunction90CB
-s 0x0022A572=ptpFunction90CC
-s 0x0022AA56=ptpFunction90CD
-s 0x0022B142=ptpFunction90CE
-s 0x0022B2FA=ptpFunction90CF
-s 0x0022B63A=ptpFunction9201
-s 0x0022BBC0=ptpFunction9202
-s 0x0022BC6E=ptpFunction9203
-s 0x0022C048=ptpFunction9204
-s 0x0022C3D8=ptpFunction9205
-s 0x0022C5B4=ptpFunction9206
-s 0x0022C65C=ptpFunction9207
-s 0x0022DAF0=ptpFunction9209
-s 0x0022DBFA=ptpFunction920A
-s 0x0022DDBC=ptpFunction920B
-s 0x0022DE50=ptpFunction920C
-s 0x0022DF62=ptpFunction9801
-s 0x0022E0C8=ptpFunction9802
-s 0x0022E2AC=ptpFunction9803
-s 0x0022E3E2=ptpFunction9805
-s 0x0024A6BA=ptpIsFunctionCode1xxx
-s 0x00249F26=getHalfWord_LE(R4 [IN ptr; OUT halfword])
-s 0x00249F56=getWord_LE(R4 [IN ptr; OUT halfword])
-s 0x002683A2=call_sys_twai_flg(R4 [IN struct; OUT err], R5 [IN timeout])
-s 0x002683D0=call_sys_twai_sem(R4 [IN ptr_id; OUT err], R5 [IN timeout])
-s 0x002683EA=call_sys_tslp_tsk(R4 [IN unused; OUT err], R5 [IN timeout])
-s 0x00268406=call_sys_dly_tsk(R4 [IN unused; OUT err], R5 [IN timeout])
-s 0x00268422=ExecuteWaitingFunctionsForTask0x38(R4 [IN func_ptr; OUT err], R5 [IN ptr_struct_param], R6 [IN timeout])
-s 0x002684C6=TaskWaitFlag(R4 [IN ptr_flag_pattern; OUT err], R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode])
-s 0x00268526=TaskWaitFlagTimeout(R4 [IN ptr_flag_pattern; OUT err], R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R8 [IN timeout])
-s 0x00268596=TaskWaitSemaphore(R4 [IN sem_id; OUT err])
-s 0x002685E0=TaskWaitSemaphoreTimeout(R4 [IN sem_id; OUT err], R5 [IN timeout])
-s 0x0026863E=TaskDelay(R4 [IN time; OUT err])
-s 0x002686B0=TaskSleepTimeout(R4 [IN timeout; OUT err])
-s 0x0026871C=TaskSleep(R4 [IN timeout; OUT err])
-s 0x00268758=TaskSetEventFlag(R4 [IN flag_id; OUT err], R5 [IN set_pattern])
-s 0x00268788=TaskClearEventFlag(R4 [IN flag_id; OUT err], R5 [IN clr_pattern])
-s 0x002687BC=call_TaskWaitFlag(R4 [IN ptr_flag_pattern; OUT err], R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode])
-s 0x002687DC=1ms_set50000119.bit1_1ms
-s 0x00283524=SUB_double(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x0028352A=ADD_double(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x00283712=SUB_float(R4 [IN floatA; OUT res], R5 [IN floatB])
-s 0x00283718=ADD_float(R4 [IN floatA; OUT res], R5 [IN floatB])
-s 0x00283808=ADD_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x0028380E=AND_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x00283814=CMP_double(R4 [IN aHi; OUT res], R5 [IN aLo], R6 [IN bHi], R7 [IN bLo])
-s 0x00283846=CMP_float(R4 [IN floatA; OUT res], R5 [IN floatB])
-s 0x00283870=CMP_int64(R4 [IN aHi; OUT res], R5 [IN aLo], R6 [IN bHi], R7 [IN bLo])
-s 0x00283882=CMP_uint64(R4 [IN aHi; OUT res], R5 [IN aLo], R6 [IN bHi], R7 [IN bLo])
-s 0x002838CE=DIV_double(R4 [IN dividendHi; OUT quotHi], R5 [IN dividendLo; OUT quotLo], R6 [IN diviHi], R7 [IN diviLo])
-s 0x00283AD6=DIV_float(R4 [IN dividend; OUT quot], R5 [IN divisor])
-s 0x00283B78=DIV_int(R4 [IN dividend; OUT quotient], R5 [IN divisor])
-s 0x00283BC6=DIV_int64(R4 [IN dividendHi; OUT quotHi], R5 [IN dividendLo; OUT quotLo], R6 [IN divHi], R7 [IN divLo])
-s 0x00283C64=dtoi(R4 [IN doubleHi; OUT int], R5 [IN doubleLo])
-s 0x00283CA2=dtoui(R4 [IN doubleHi; OUT uint], R5 [IN doubleLo])
-s 0x00283CE0=ftod(R4 [IN float; OUT doubleHi], R5 [OUT doubleLo])
-s 0x00283D08=ftoi(R4 [IN float; OUT int])
-s 0x00283D40=ftoui(R4 [IN float; OUT uint])
-s 0x00283D78=itod(R4 [IN int; OUT doubleHi], R5 [OUT doubleLo])
-s 0x00283D92=itof(R4 [IN int; OUT float])
-s 0x00283DAC=int2int64(R4 [IN int; OUT resHi], R5 [OUT resLo])
-s 0x00283DB2=int64toint(R4 [IN hi; OUT res], R5 [IN lo])
-s 0x00283DB6=MOD_int(R4 [IN dividend; OUT remainder], R5 [IN divisor])
-s 0x00283E8E=MUL_double(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x00283F92=MUL_float(R4 [IN floatA; OUT resFloat], R5 [IN floatB])
-s 0x00284006=MUL_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x0028401A=OR_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x00284020=SHL_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN shiftHi], R7 [IN shiftLo])
-s 0x0028403C=SAR_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN shiftHi], R7 [IN shiftLo])
-s 0x00284058=SHR_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN shiftHi], R7 [IN shiftLo])
-s 0x00284074=SUB_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x0028407A=DIV_uint(R4 [IN dividend; OUT quotient], R5 [IN divisor])
-s 0x002840C2=DIV_uint64(R4 [IN dividendHi; OUT quotHi], R5 [IN dividendLo; OUT quotLo], R6 [IN divHi], R7 [IN divLo])
-s 0x002840F0=uint2double(R4 [IN uint; OUT doubleHi], R5 [OUT doubleLo])
-s 0x0028413A=uint2float(R4 [IN uint; OUT float])
-s 0x0028418C=uint2uint64(R4 [IN uint; OUT uint64Hi], R5 [OUT uint64Lo])
-s 0x00284192=MOD_uint(R4 [IN dividend; OUT remainder], R5 [IN divisor])
-s 0x002841DA=MOD_uint64(R4 [IN dividendHi; OUT remHi], R5 [IN dividendLo; OUT remLo], R6 [IN divHi], R7 [IN divLo])
-s 0x00284214=abs(R4 [IN value; OUT res])
-s 0x00284222=atan2(R4 [IN doubleYHi; OUT outHi], R5 [IN doubleYLo; OUT outLo], R6 [IN doubleXHi], R7 [IN doubleXLo])
-s 0x00284396=atoi(R4 [IN str; OUT int])
-s 0x00284404=ceil(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x002844EA=floor(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x002845E2=isdigit(R4 [IN char; OUT yes])
-s 0x002845F2=abs_002845F2(R4 [IN value; OUT res])
-s 0x00284600=log(R4 [IN doubleXHi; OUT outHi], R5 [IN doubleXLo; OUT outLo], R6 [IN doubleYHi], R7 [IN doubleYLo])
-s 0x0028480A=log10(R4 [IN doubleXHi; OUT outHi], R5 [IN doubleXLo; OUT outLo], R6 [IN doubleYHi], R7 [IN doubleYLo])
-s 0x00284A58=memcmp(R4 [IN source1; OUT res], R5 [IN source2], R6 [IN count])
-s 0x00284A72=memcpy(R4 [IN ptr_dst],R5 [IN ptr_src], R6 [IN size])
-s 0x00284A82=memmove(R4 [IN dst; OUT dst], R5 [IN source], R6 [IN count])
-s 0x00284AA4=memset(R4 [IN dst; OUT dst], R5 [IN val], R6 [IN count])
-s 0x00284AB2=pow(R4 [IN doubleXHi; OUT outHi], R5 [IN doubleXLo; OUT outLo], R6 [IN doubleYHi], R7 [IN doubleYLo])
-s 0x00285240=rand(R4 [OUT value])
-s 0x00285278=sprintf(R4 [IN dst; OUT chars], R5 [IN formatstring], R6 [IN param3], R7 [IN param4])
-s 0x00285312=sqrt(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x002854F0=strcat(R4 [IN dst; OUT dst], R5 [IN src])
-s 0x0028550A=strchr(R4 [IN ptr; OUT pos], R5 [IN char])
-s 0x0028551C=strcmp(R4 [IN str1; OUT res], R5 [IN str2]))
-s 0x00285530=strcpy(R4 [IN dst; OUT dst], R5 [IN src])
-s 0x0028553E=strlen(R4 [IN ptr; OUT len])
-s 0x0028554E=strncat(R4 [IN dst; OUT dst], R5 [IN src], R6 [IN n])
-s 0x00285572=strncmp(R4 [IN str1; OUT res], R5 [IN str2], R6 [IN n])
-s 0x00285590=strncpy(R4 [IN dst; OUT dst], R5 [IN src], R6 [IN n])
-s 0x002855B0=strstr(R4 [IN where; OUT pos], R5 [iN what])
-s 0x002855E2=strtok(R4 [IN str; OUT ptr_token], R5 [IN ptr_delimeters])
-s 0x00285678=strtol(R4 [IN str; OUT int], R5 [IN ptr_endptr], R6 [IN base])
-s 0x00285702=vsprintf(R4 [IN dst; OUT chars], R5 [IN formatstring], R6 [IN va_list])
-s 0x002866A6=atan(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x00399CF6=BFT502_s1
-s 0x0039A160=BFTxx_s1_39A160
-s 0x0039A68A=BFTxx_s2_39A68A
-s 0x0039A6F0=BFTxx_s5_39A6F0
-s 0x0039A828=BFTxx_s4_39A828
-s 0x0039A88E=BFTxx_s1_39A88E
-s 0x0039B06E=BFTxx_s6_39B06E
-s 0x0039B738=BFT146_s6
-s 0x0039ED8A=BFTxx_s1_39ED8A
-s 0x0039EFB2=BFTxx_s6_39EFB2
-s 0x0039FD22=BFT0_s0
-s 0x0039FD32=BFTxx_s2_39FD32
-s 0x0039FD34=BFT0_s1
-s 0x003A04C2=BFT144_s0
-s 0x003A04D0=BFT144_s2
-s 0x003A056E=BFT146_s8
-s 0x003A1AD4=BFT146_s5
-s 0x003A1AEE=BFT146_s7
-s 0x003A1B02=BFT146_s2
-s 0x003A1BCE=BFT146_s0
-s 0x003A1C6E=BFT145_s0
-s 0x003A1C90=BFT145_s2
-s 0x003A24BA=BFT147_s0
-s 0x003A2516=BFT147_s2
-s 0x003A2596=BFT147_s7
-s 0x003A25AC=BFT148_s0
-s 0x003A2608=BFT148_s2
-s 0x003A2688=BFT148_s7
-s 0x003A269E=BFT149_s0
-s 0x003A2792=BFT149_s2
-s 0x003A28F0=BFT149_s7
-s 0x003A2906=BFT150_s0
-s 0x003A2988=BFT150_s2
-s 0x003A2A3E=BFT150_s7
-s 0x003A2A54=BFT151_s0
-s 0x003A2AB0=BFT151_s2
-s 0x003A2B30=BFT151_s7
-s 0x003A2B46=BFT152_s0
-s 0x003A2BA2=BFT152_s2
-s 0x003A2C22=BFT152_s7
-s 0x003A2C38=BFT153_s0
-s 0x003A2C94=BFT153_s7
-s 0x003A2CEC=BFT153_s2
-s 0x003A2E5A=BFT155_s0
-s 0x003A2EBE=BFT155_s2
-s 0x003A2F3E=BFT156_s0
-s 0x003A2F9A=BFT156_s2
-s 0x003A301A=BFT157_s0
-s 0x003A308C=BFT157_s7
-s 0x003A30F2=BFT157_s2
-s 0x003A320C=BFT158_s0
-s 0x003A32B4=BFT158_s7
-s 0x003A331A=BFT158_s2
-s 0x003A343C=BFT159_s0
-s 0x003A343E=BFT159_s2
-s 0x003A3488=BFT159_s1
-s 0x003A34EE=BFT160_s0
-s 0x003A3542=BFT160_s2
-s 0x003A3550=BFT160_s1
-s 0x003A3582=BFT161_s0
-s 0x003A3584=BFT161_s1
-s 0x003A35BC=BFT162_s0
-s 0x003A35BE=BFT162_s1
-s 0x003A35F6=BFT163_s0
-s 0x003A35F8=BFT163_s1
-s 0x003A37DA=BFT165_s0
-s 0x003A3836=BFT165_s2
-s 0x003A38B6=BFT166_s0
-s 0x003A39D0=BFT166_s2
-s 0x003A3BEE=BFT166_s7
-s 0x003A3C04=BFT167_s0
-s 0x003A3C06=BFT167_s7
-s 0x003A3C52=BFT167_s2
-s 0x003A3C60=BFT167_s8
-s 0x003A3D56=BFT168_s0
-s 0x003A3DFE=BFT168_s2
-s 0x003A3EEA=BFT169_s0
-s 0x003A3F10=BFT169_s3
-s 0x003A3F22=BFT169_s4
-s 0x003A3F3A=BFT169_s5
-s 0x003A3FAC=BFT169_s6
-s 0x003A408C=BFT169_s7
-s 0x003A40BA=BFT170_s0
-s 0x003A4162=BFT170_s2
-s 0x003A424E=BFT171_s8
-s 0x003A4528=BFT171_s7
-s 0x003A452C=BFT171_s2
-s 0x003A453A=BFT172_s0
-s 0x003A462E=BFT172_s2
-s 0x003A478C=BFT173_s0
-s 0x003A4880=BFT173_s2
-s 0x003A49DE=BFT174_s0
-s 0x003A4AD2=BFT174_s2
-s 0x003A4C30=BFT175_s0
-s 0x003A4D4A=BFT175_s2
-s 0x003A4EE4=BFT176_s0
-s 0x003A4FD8=BFT176_s2
-s 0x003A5136=BFT179_s0
-s 0x003A5138=BFT179_s2
-s 0x003A5146=BFT179_s8
-s 0x003A51D6=BFT180_s0
-s 0x003A523A=BFT180_s5
-s 0x003A52D8=BFT180_s7
-s 0x003A5330=BFT180_s2
-s 0x003A53B0=BFT181_s0
-s 0x003A5458=BFT181_s5
-s 0x003A552C=BFT181_s2
-s 0x003A567A=BFT182_s0
-s 0x003A56D6=BFT182_s2
-s 0x003A5756=BFT183_s0
-s 0x003A57F0=BFT183_s2
-s 0x003A5906=BFT184_s0
-s 0x003A5962=BFT184_s2
-s 0x003A59E2=BFT185_s0
-s 0x003A5AA4=BFT185_s2
-s 0x003A5BC6=BFT186_s0
-s 0x003A5C02=BFT186_s5
-s 0x003A5C74=BFT186_s3
-s 0x003A5C86=BFT186_s6
-s 0x003A5D70=BFT187_s0
-s 0x003A5DCC=BFT187_s2
-s 0x003A5EBE=BFT187_s7
-s 0x003A5EC2=BFT188_s0
-s 0x003A5F50=BFT188_s2
-s 0x003A5FA4=BFT189_s0
-s 0x003A6000=BFT189_s2
-s 0x003A608E=BFT190_s0
-s 0x003A60EA=BFT190_s2
-s 0x003A616A=BFT191_s0
-s 0x003A6212=BFT191_s2
-s 0x003A639A=BFT192_s0
-s 0x003A63F6=BFT192_s7
-s 0x003A645C=BFT192_s2
-s 0x003A64DC=BFT193_s0
-s 0x003A655E=BFT193_s2
-s 0x003A6614=BFT194_s0
-s 0x003A6670=BFT194_s2
-s 0x003A66F0=BFT196_s0
-s 0x003A6808=BFT196_s2
-s 0x003A69DE=BFT197_s0
-s 0x003A6B8E=BFT197_s7
-s 0x003A6BF4=BFT197_s2
-s 0x003A6FF8=BFT198_s7
-s 0x003A7000=BFTxx_s4_3A7000
-s 0x003A7036=BFT198_s0
-s 0x003A70DE=BFT198_s2
-s 0x003A7132=BFT199_s0
-s 0x003A7366=BFT199_s4
-s 0x003A73A0=BFT199_s2
-s 0x003A78D8=BFT202_s0
-s 0x003A78DA=BFT202_s1
-s 0x003A84DC=BFT203_s0
-s 0x003A859E=BFT203_s1
-s 0x003A95B2=BFT201_s0
-s 0x003A9884=BFT201_s4
-s 0x003A98BE=BFT201_s2
-s 0x003A9ED2=BFT204_s0
-s 0x003A9F2E=BFT204_s7
-s 0x003A9F9A=BFT204_s2
-s 0x003AA01A=BFT205_s0
-s 0x003AA076=BFT205_s7
-s 0x003AA0EA=BFT205_s2
-s 0x003AA16A=BFT206_s0
-s 0x003AA238=BFT206_s4
-s 0x003AA270=BFT206_s7
-s 0x003AA2E8=BFT206_s2
-s 0x003AA450=BFT207_s0
-s 0x003AA4AC=BFT207_s7
-s 0x003AA512=BFT207_s2
-s 0x003AA592=BFT209_s0
-s 0x003AA614=BFT209_s2
-s 0x003AA6CA=BFT209_s7
-s 0x003AA6E0=BFT210_s0
-s 0x003AAA52=BFT210_s7
-s 0x003AAB4A=BFT210_s2
-s 0x003AB0B2=BFT211_s0
-s 0x003AB424=BFT211_s7
-s 0x003AB51C=BFT211_s2
-s 0x003ABA84=BFT212_s0
-s 0x003ABB7E=BFT212_s2
-s 0x003ABD18=BFT213_s8
-s 0x003ABDDC=BFT213_s2
-s 0x003ABE68=BFT214_s0
-s 0x003ABE8A=BFT214_s1
-s 0x003AC122=BFT215_s0
-s 0x003AC1A4=BFT215_s2
-s 0x003AC25E=BFT216_s0
-s 0x003AC2BA=BFT216_s2
-s 0x003AC33E=BFT217_s0
-s 0x003AC3C0=BFT217_s2
-s 0x003AC4C6=BFT218_s0
-s 0x003AC522=BFT218_s2
-s 0x003AC5A2=BFT221_s0
-s 0x003AC6C6=BFT221_s2
-s 0x003AC860=BFT219_s0
-s 0x003AC8BC=BFT219_s2
-s 0x003AC950=BFT220_s0
-s 0x003AC9AC=BFT220_s2
-s 0x003ACAB4=BFT223_s0
-s 0x003ACBFA=BFT223_s2
-s 0x003ACDD0=BFT224_s0
-s 0x003ACF16=BFT224_s2
-s 0x003AD0EC=BFT225_s0
-s 0x003AD232=BFT225_s2
-s 0x003AD408=BFT226_s0
-s 0x003AD464=BFT226_s3
-s 0x003AD488=BFT226_s7
-s 0x003AD4AC=BFT226_s2
-s 0x003AD52C=BFT177_s0
-s 0x003AD5D4=BFT177_s2
-s 0x003AD880=BFT339_s0
-s 0x003AD962=BFT339_s7
-s 0x003AD9FC=BFT339_s2
-s 0x003ADE1E=BFT349_s7
-s 0x003ADE68=BFT349_s2
-s 0x003ADE78=BFT359_s7
-s 0x003ADEC2=BFT359_s2
-s 0x003ADED2=BFT421_s2
-s 0x003ADF24=BFT389_s0
-s 0x003ADFB0=BFT389_s1
-s 0x003AE0BC=BFT389_s6
-s 0x003AEC3C=BFT390_s0
-s 0x003AECB4=BFT391_s0
-s 0x003AF33A=BFT384_s0
-s 0x003AF350=BFT384_s8
-s 0x003AF3E4=BFT384_s7
-s 0x003AF4BE=BFT384_s2
-s 0x003AF4DC=BFT387_s0
-s 0x003AF52C=BFT387_s2
-s 0x003AF5B0=BFT388_s0
-s 0x003AF662=BFT388_s2
-s 0x003AF76C=BFT386_s0
-s 0x003AF7C2=BFT386_s3
-s 0x003AF9DE=BFTxx_s1_3AF9DE
-s 0x003AFE06=BFTxx_s3_3AFE06
-s 0x003AFF02=BFTxx_s4_3AFF02
-s 0x003B0002=BFTxx_s5_3B0002
-s 0x003B03CC=BFTxx_s6_3B03CC
-s 0x003B10C6=BFTxx_s0_3B10C6
-s 0x003B118E=BFTxx_s7_3B118E
-s 0x003B11BA=BFT395_s7
-s 0x003B11CE=BFT400_s7
-s 0x003B11E2=BFT401_s7
-s 0x003B11F6=BFT404_s7
-s 0x003B120A=BFTxx_s8_3B120A
-s 0x003B1884=BFTxx_s2_3B1884
-s 0x003B19B6=BFT393_s0
-s 0x003B1A56=BFT393_s2
-s 0x003B1B1C=BFT394_s0
-s 0x003B1BBA=BFT394_s2
-s 0x003B1C82=BFT395_s0
-s 0x003B1D9C=BFT395_s8
-s 0x003B1E02=BFT395_s2
-s 0x003B208A=BFT400_s0
-s 0x003B20DE=BFT400_s5
-s 0x003B239A=BFT400_s6
-s 0x003B24BA=BFT400_s2
-s 0x003B24E8=BFT402_s0
-s 0x003B25A8=BFT402_s2
-s 0x003B26A0=BFT403_s0
-s 0x003B272C=BFT403_s2
-s 0x003B27A4=BFT398_s0
-s 0x003B2AEE=BFT398_s8
-s 0x003B2B60=BFT398_s2
-s 0x003B3356=BFT405_s0
-s 0x003B3416=BFT405_s2
-s 0x003B351A=BFT397_s0
-s 0x003B35EE=BFT397_s8
-s 0x003B365C=BFT397_s2
-s 0x003B3826=BFT399_s0
-s 0x003B38C0=BFT399_s8
-s 0x003B3956=BFT399_s2
-s 0x003B3A8A=BFT406_s1
-s 0x003B3D2A=BFT406_s0
-s 0x003B3D42=BFT406_s3
-s 0x003B3DB0=BFT406_s4
-s 0x003B3E04=BFT406_s5
-s 0x003B3EDE=BFT406_s6
-s 0x003B517A=BFT401_s0
-s 0x003B53C2=BFT401_s2
-s 0x003B563C=BFT376_s7
-s 0x003B569C=BFT376_s8
-s 0x003B5768=BFT377_s0
-s 0x003B57CE=BFT378_s0
-s 0x003B5834=BFT379_s0
-s 0x003B589A=BFT380_s0
-s 0x003B5900=BFT377_s2
-s 0x003B59C8=BFT378_s2
-s 0x003B5A86=BFT379_s2
-s 0x003B5B44=BFT380_s2
-s 0x003B5C08=BFT376_s2
-s 0x003B5C70=BFT442_s7
-s 0x003B5D70=BFT442_s2
-s 0x003B5D86=BFT407_s0
-s 0x003B61E6=BFT408_s0
-s 0x003B662E=BFT409_s0
-s 0x003B6A02=BFT410_s0
-s 0x003B6DB8=BFT411_s0
-s 0x003B988C=BFTxx_s1_3B988C
-s 0x003BA100=BFT404_s0
-s 0x003BA1B8=BFT404_s2
-s 0x003BA360=BFT396_s0
-s 0x003BA3C6=BFT396_s1
-s 0x003BA3D4=BFT396_s2
-s 0x003BA450=BFT396_s3
-s 0x003BA45E=BFT396_s4
-s 0x003BA470=BFT396_s5
-s 0x003BA482=BFT396_s6
-s 0x003BA494=BFT396_s7
-s 0x003BA498=BFT396_s8
-s 0x003BA506=BFT1_s7
-s 0x003BA51A=BFT1_s0
-s 0x003BA53E=BFT1_s8
-s 0x003BA62C=BFT1_s2
-s 0x003BA9C2=BFT2_s2
-s 0x003BAA30=BFT4_s0
-s 0x003BAA86=BFT2_s7
-s 0x003BABEE=BFT4_s3
-s 0x003BAD48=BFT4_s6
-s 0x003BAF82=BFT4_s2
-s 0x003BB096=BFT5_s2
-s 0x003BB0A4=BFT7_s0
-s 0x003BB0EC=BFT7_s3
-s 0x003BB0EE=BFT7_s2
-s 0x003BB1D8=BFT8_s7
-s 0x003BB280=BFT9_s0
-s 0x003BB2EC=BFT9_s3
-s 0x003BB3F6=BFT9_s2
-s 0x003BB578=BFT10_s0
-s 0x003BB5E4=BFT10_s3
-s 0x003BB6EE=BFT10_s2
-s 0x003BB870=BFT11_s0
-s 0x003BB8E6=BFT11_s2
-s 0x003BB99C=BFT11_s7
-s 0x003BBA02=BFT12_s2
-s 0x003BBA1A=BFT12_s7
-s 0x003BBAFE=BFT14_s2
-s 0x003BBB4C=BFT17_s0
-s 0x003BBB6E=BFT17_s3
-s 0x003BBB70=BFT17_s1
-s 0x003BBBD6=BFT17_s2
-s 0x003BBCE0=BFT18_s0
-s 0x003BBCE2=BFT18_s1
-s 0x003BC070=BFT32_s0
-s 0x003BC0C8=BFT32_s2
-s 0x003BC15C=BFT32_s7
-s 0x003BC1B4=BFT33_s0
-s 0x003BC20C=BFT33_s2
-s 0x003BC28C=BFT34_s0
-s 0x003BC302=BFT34_s2
-s 0x003BC3B8=BFTxx_s0_3BC3B8
-s 0x003BC3BA=BFT35_s8
-s 0x003BC442=BFT35_s3
-s 0x003BC472=BFT35_s2
-s 0x003BC48E=BFT35_s7
-s 0x003BC52E=BFT38_s0
-s 0x003BC5A4=BFT38_s7
-s 0x003BC5F6=BFT38_s2
-s 0x003BC6AE=BFT39_s0
-s 0x003BC740=BFT39_s6
-s 0x003BC7B0=BFT39_s2
-s 0x003BC89E=BFT37_s8
-s 0x003BC8F0=BFT37_s2
-s 0x003BC9A2=BFT40_s2
-s 0x003BCAFA=BFT40_s7
-s 0x003BCBBA=BFT43_s0
-s 0x003BCC02=BFT43_s3
-s 0x003BCC16=BFT43_s2
-s 0x003BCD3C=BFT42_s0
-s 0x003BCD5E=BFT42_s8
-s 0x003BCD9C=BFT42_s6
-s 0x003BCEA0=BFT42_s2
-s 0x003BD240=BFT19_s0
-s 0x003BD362=BFT19_s7
-s 0x003BD54A=BFT19_s8
-s 0x003BD5C0=BFT19_s2
-s 0x003BD5CE=BFT20_s0
-s 0x003BD638=BFT20_s2
-s 0x003BD71E=BFT21_s0
-s 0x003BD720=BFT21_s1
-s 0x003BD9E6=BFT21_s6
-s 0x003BDB34=BFT21_s2
-s 0x003BDBBA=BFT22_s2
-s 0x003BDE70=BFT26_s0
-s 0x003BDE92=BFT26_s3
-s 0x003BDEE2=BFT26_s2
-s 0x003BDF6E=BFT27_s0
-s 0x003BDFD8=BFT28_s1
-s 0x003BE1E0=BFT28_s6
-s 0x003BE3FA=BFT28_s2
-s 0x003BE428=BFT29_s1
-s 0x003BE6DE=BFT29_s6
-s 0x003BE828=BFT29_s2
-s 0x003BE860=BFT30_s0
-s 0x003BE882=BFT30_s3
-s 0x003BEA02=BFT30_s1
-s 0x003BEAE6=BFT30_s2
-s 0x003BFEA8=BFT31_s0
-s 0x003BFECA=BFT31_s6
-s 0x003BFF00=BFT31_s2
-s 0x003C0002=BFT37_s7
-s 0x003C0256=BFT227_s0
-s 0x003C0270=BFT227_s7
-s 0x003C03B6=BFT227_s8
-s 0x003C05CC=BFT227_s2
-s 0x003C07C6=BFT233_s0
-s 0x003C07C8=BFT233_s2
-s 0x003C07D6=BFT234_s0
-s 0x003C07F8=BFT234_s2
-s 0x003C0904=BFT235_s0
-s 0x003C0926=BFT235_s2
-s 0x003C0AEC=BFT236_s0
-s 0x003C0AEE=BFT236_s2
-s 0x003C0AFC=BFT237_s0
-s 0x003C0C54=BFT237_s2
-s 0x003C0CA6=BFT238_s0
-s 0x003C0E00=BFT238_s2
-s 0x003C144A=BFT231_s0
-s 0x003C14F4=BFT231_s3
-s 0x003C153E=BFT231_s2
-s 0x003C15C8=BFT231_s6
-s 0x003C17D6=BFT232_s0
-s 0x003C17D8=BFT232_s3
-s 0x003C17E0=BFT232_s5
-s 0x003C1898=BFT232_s6
-s 0x003C1AA8=BFT239_s0
-s 0x003C1B10=BFT239_s2
-s 0x003C1B74=BFT239_s7
-s 0x003C1C7A=BFT239_s6
-s 0x003C2394=BFT240_s0
-s 0x003C2446=BFT240_s2
-s 0x003C2752=BFT241_s0
-s 0x003C27BC=BFT241_s7
-s 0x003C2870=BFTxx_s4_3C2870
-s 0x003C28B6=BFT241_s6
-s 0x003C28D6=BFT241_s2
-s 0x003C2E04=BFT243_s8
-s 0x003C2EA8=BFT243_s7
-s 0x003C2EEC=BFT244_s0
-s 0x003C2FC8=BFT244_s2
-s 0x003C313A=BFT245_s0
-s 0x003C3198=BFT245_s2
-s 0x003C321C=BFT246_s0
-s 0x003C3298=BFT246_s2
-s 0x003C334E=BFTxx_s0_3C334E
-s 0x003C3350=BFTxx_s8_3C3350
-s 0x003C33C4=BFTxx_s7_3C33C4
-s 0x003C3440=BFTxx_s6_3C3440
-s 0x003C39FA=BFTxx_s1_3C39FA
-s 0x003C3EA2=BFT247_s2
-s 0x003C3EB0=BFT248_s0
-s 0x003C3EEC=BFT248_s1
-s 0x003C4578=BFT250_s0
-s 0x003C45F4=BFT250_s2
-s 0x003C46AA=BFTxx_s1_3C46AA
-s 0x003C481A=BFT251_s0
-s 0x003C4878=BFT251_s2
-s 0x003C4914=BFT249_s1
-s 0x003C56FC=BFT252_s0
-s 0x003C5B98=BFT252_s2
-s 0x003C6278=BFT253_s0
-s 0x003C62FA=BFT253_s2
-s 0x003C63B4=BFT254_s0
-s 0x003C6472=BFT254_s8
-s 0x003C6492=BFT254_s6
-s 0x003C656A=BFT254_s2
-s 0x003C66A2=BFT255_s1
-s 0x003C6A8A=BFT262_s3
-s 0x003C6AAE=BFT262_s7
-s 0x003C6AD0=BFT262_s1
-s 0x003C6C12=BFT262_s6
-s 0x003C6C6C=BFT262_s4
-s 0x003C76CA=BFT258_s0
-s 0x003C7724=BFT258_s2
-s 0x003C77A4=BFT259_s4
-s 0x003C7890=BFT259_s6
-s 0x003C7E64=BFT259_s0
-s 0x003C7E66=BFT259_s7
-s 0x003C8022=BFT260_s0
-s 0x003C8038=BFT260_s1
-s 0x003C82D0=BFT260_s4
-s 0x003C84E8=BFT337_s0
-s 0x003C8546=BFT337_s4
-s 0x003C8568=BFT337_s3
-s 0x003C8570=BFT337_s5
-s 0x003C85CE=BFT337_s6
-s 0x003C8B1A=BFT337_s2
-s 0x003C8B96=BFT338_s0
-s 0x003C8C2A=BFT338_s4
-s 0x003C8C6C=BFT338_s3
-s 0x003C8C74=BFT338_s6
-s 0x003C93F8=BFT338_s1
-s 0x003C9648=BFT338_s2
-s 0x003C98B2=BFT322_s0
-s 0x003C98B4=BFT322_s8
-s 0x003C9914=BFT322_s4
-s 0x003C9956=BFT322_s7
-s 0x003C99B2=BFT322_s2
-s 0x003C99C0=BFT323_s0
-s 0x003C9A1A=BFT323_s2
-s 0x003C9ADC=BFT324_s0
-s 0x003C9ADE=BFT324_s3
-s 0x003C9B0A=BFT324_s4
-s 0x003C9B3A=BFT324_s6
-s 0x003CA426=BFT325_s0
-s 0x003CA480=BFT325_s2
-s 0x003CA5B2=BFT228_s0
-s 0x003CA5B4=BFTxx_s3_3CA5B4
-s 0x003CA5B6=BFT228_s7
-s 0x003CA6F0=BFT228_s2
-s 0x003CA6FE=BFT229_s0
-s 0x003CA720=BFT229_s1
-s 0x003CA786=BFT229_s2
-s 0x003CA8EA=BFT230_s0
-s 0x003CA90C=BFT230_s1
-s 0x003CA972=BFT230_s2
-s 0x003CAAD6=BFT318_s0
-s 0x003CAB72=BFT318_s8
-s 0x003CABA6=BFT318_s2
-s 0x003CACA2=BFT318_s1
-s 0x003CAD84=BFT318_s6
-s 0x003CAE74=BFT319_s1
-s 0x003CAF04=BFT320_s1
-s 0x003CB170=BFT321_s0
-s 0x003CB172=BFT321_s7
-s 0x003CB312=BFT321_s2
-s 0x003CC6F0=BFT330_s0
-s 0x003CC744=BFT330_s2
-s 0x003CC7AE=BFT330_s1
-s 0x003CCA80=BFT330_s6
-s 0x003CD1E8=BFT331_s0
-s 0x003CD20C=BFT331_s7
-s 0x003CD2C4=BFT331_s8
-s 0x003CD300=BFT331_s2
-s 0x003CD3E8=BFT332_s0
-s 0x003CD434=BFT332_s2
-s 0x003CD4BA=BFT333_s1
-s 0x003CD87C=BFT333_s6
-s 0x003CD9CA=BFT334_s0
-s 0x003CDA4E=BFT334_s2
-s 0x003CDA7C=BFT334_s1
-s 0x003CDCA8=BFT334_s6
-s 0x003CDE04=BFT335_s0
-s 0x003CDE26=BFT335_s3
-s 0x003CDEBC=BFT335_s2
-s 0x003CE036=BFT335_s6
-s 0x003CE08E=BFT336_s1
-s 0x003CE280=BFT336_s6
-s 0x003CF062=BFT326_s0
-s 0x003CF064=BFT326_s8
-s 0x003CF0DE=BFT326_s7
-s 0x003CF166=BFT326_s2
-s 0x003CF174=BFT327_s0
-s 0x003CF1D0=BFT327_s2
-s 0x003CF288=BFT328_s0
-s 0x003CF2E4=BFT328_s2
-s 0x003CF466=BFT329_s7
-s 0x003CF47C=BFT329_s1
-s 0x003CFF76=BFT44_s0
-s 0x003CFFAC=BFT44_s7
-s 0x003CFFC0=BFT44_s8
-s 0x003D0488=BFT44_s2
-s 0x003D049E=BFT45_s0
-s 0x003D04C0=BFT45_s6
-s 0x003D057C=BFT45_s2
-s 0x003D05CA=BFTxx_s7_3D05CA
-s 0x003D0612=BFT46_s0
-s 0x003D0634=BFT46_s2
-s 0x003D0F30=BFT130_s0
-s 0x003D0F32=BFT130_s8
-s 0x003D0F72=BFT130_s7
-s 0x003D1176=BFTxx_s4_3D1176
-s 0x003D118E=BFT131_s0
-s 0x003D1224=BFT131_s2
-s 0x003D1380=BFT132_s1
-s 0x003D167A=BFT133_s0
-s 0x003D16D8=BFT133_s2
-s 0x003D17C8=BFT47_s0
-s 0x003D17CA=BFT47_s7
-s 0x003D194C=BFT48_s1
-s 0x003D1D36=BFT48_s3
-s 0x003D1D6C=BFT49_s0
-s 0x003D1D7C=BFT49_s1
-s 0x003D233E=BFT50_s0
-s 0x003D2340=BFT50_s3
-s 0x003D242E=BFT50_s2
-s 0x003D243C=BFT50_s7
-s 0x003D2474=BFT51_s1
-s 0x003D253A=BFT54_s0
-s 0x003D25CA=BFT54_s2
-s 0x003D2680=BFT54_s4
-s 0x003D2698=BFT54_s5
-s 0x003D2876=BFT54_s7
-s 0x003D299E=BFT58_s0
-s 0x003D29F8=BFT58_s2
-s 0x003D2A78=BFT58_s7
-s 0x003D2AB0=BFT59_s0
-s 0x003D2AB2=BFT59_s8
-s 0x003D2B10=BFT59_s2
-s 0x003D2B1E=BFT59_s7
-s 0x003D2BA8=BFT60_s0
-s 0x003D2BF4=BFT60_s2
-s 0x003D2C8A=BFT61_s0
-s 0x003D2CE4=BFT61_s2
-s 0x003D2D68=BFT62_s0
-s 0x003D2E70=BFT62_s7
-s 0x003D2F5C=BFTxx_s6_3D2F5C
-s 0x003D310C=BFT62_s2
-s 0x003D33E2=BFT64_s0
-s 0x003D341E=BFT64_s3
-s 0x003D345E=BFT64_s4
-s 0x003D355A=BFT64_s5
-s 0x003D35B4=BFT64_s6
-s 0x003D481A=BFTxx_s8_3D481A
-s 0x003D4A0C=BFT63_s0
-s 0x003D4A80=BFT65_s0
-s 0x003D4B3E=BFT63_s2
-s 0x003D4BC4=BFT65_s2
-s 0x003D4E86=BFT67_s0
-s 0x003D51D6=BFT67_s1
-s 0x003D51DE=BFT67_s2
-s 0x003D614E=BFTxx_s4_3D614E
-s 0x003D61B8=BFT69_s1
-s 0x003D6986=BFT70_s0
-s 0x003D69EE=BFT70_s7
-s 0x003D6A62=BFT70_s8
-s 0x003D6A8C=BFT70_s1
-s 0x003D7090=BFT70_s2
-s 0x003D71A6=BFT71_s1
-s 0x003D7348=BFT74_s0
-s 0x003D736A=BFT74_s4
-s 0x003D738C=BFT74_s6
-s 0x003D7424=BFT74_s2
-s 0x003D748E=BFT74_s1
-s 0x003D7504=BFT73_s0
-s 0x003D7574=BFT73_s2
-s 0x003D7750=BFT110_s0
-s 0x003D77AA=BFT110_s2
-s 0x003D782A=BFT110_s7
-s 0x003D7862=BFT111_s0
-s 0x003D794A=BFT111_s2
-s 0x003D7AA8=BFT111_s4
-s 0x003D7AE4=BFT111_s7
-s 0x003D7B86=BFT117_s0
-s 0x003D7BE0=BFT117_s2
-s 0x003D7C60=BFT117_s4
-s 0x003D7CA0=BFT117_s7
-s 0x003D7CF0=BFT118_s0
-s 0x003D7D4E=BFT118_s7
-s 0x003D7D86=BFT118_s2
-s 0x003D7E06=BFT119_s0
-s 0x003D7EA2=BFT119_s2
-s 0x003D7F8E=BFT119_s7
-s 0x003D7FC6=BFT53_s0
-s 0x003D8086=BFT53_s4
-s 0x003D80F0=BFT53_s2
-s 0x003D828A=BFT53_s5
-s 0x003D829C=BFT53_s7
-s 0x003D84A4=BFT120_s8
-s 0x003D88A4=BFT120_s0
-s 0x003D88A6=BFT120_s3
-s 0x003D8956=BFTxx_s7_3D8956
-s 0x003D89C4=BFT120_s2
-s 0x003D89F0=BFT121_s0
-s 0x003D8A50=BFT121_s7
-s 0x003D8B9C=BFT121_s2
-s 0x003D8D04=BFT122_s0
-s 0x003D8D66=BFT122_s7
-s 0x003D8EAE=BFT122_s2
-s 0x003D9016=BFT123_s0
-s 0x003D907C=BFT123_s2
-s 0x003D91E4=BFT123_s7
-s 0x003D9332=BFT124_s0
-s 0x003D938C=BFT124_s2
-s 0x003D9424=BFTxx_s4_3D9424
-s 0x003D943C=BFTxx_s7_3D943C
-s 0x003D94E6=BFT125_s0
-s 0x003D9546=BFT125_s2
-s 0x003D9598=BFT126_s0
-s 0x003D95FC=BFT126_s2
-s 0x003D964E=BFT127_s0
-s 0x003D96B2=BFT127_s2
-s 0x003D9766=BFT128_s0
-s 0x003D9A20=BFT128_s2
-s 0x003DA008=BFTxx_s4_3DA008
-s 0x003DA020=BFTxx_s7_3DA020
-s 0x003DA0CA=BFTxx_s4_3DA0CA
-s 0x003DA0E2=BFT129_s1
-s 0x003DA5D6=BFT52_s0
-s 0x003DA65E=BFT52_s2
-s 0x003DA768=BFT52_s7
-s 0x003DA7A0=BFT136_s0
-s 0x003DA7A2=BFT136_s8
-s 0x003DA810=BFT136_s7
-s 0x003DA898=BFTxx_s0_3DA898
-s 0x003DABA2=BFTxx_s2_3DABA2
-s 0x003DB1A6=BFTxx_s8_3DB1A6
-s 0x003DB2B0=BFT139_s0
-s 0x003DB320=BFT139_s2
-s 0x003DB3CC=BFT139_s8
-s 0x003DB406=BFT140_s0
-s 0x003DB4A0=BFT140_s2
-s 0x003DB586=BFT140_s1
-s 0x003DB770=BFT141_s0
-s 0x003DB784=BFT141_s1
-s 0x003DBE1A=BFT142_s0
-s 0x003DBE66=BFT142_s1
-s 0x003DC094=BFT142_s2
-s 0x003DC15E=BFT142_s4
-s 0x003DC162=BFT142_s5
-s 0x003DC5FE=BFT143_s0
-s 0x003DC66A=BFT143_s2
-s 0x003DC720=BFT76_s0
-s 0x003DCB4E=BFTxx_s1_3DCB4E
-s 0x003DCD4A=BFTxx_s5_3DCD4A
-s 0x003DCD80=BFTxx_s3_3DCD80
-s 0x003DCD90=BFTxx_s4_3DCD90
-s 0x003DCDEE=BFTxx_s6_3DCDEE
-s 0x003DD1A6=BFT76_s7
-s 0x003DD254=BFT76_s8
-s 0x003DD612=BFT76_s2
-s 0x003DD7E0=BFT77_s0
-s 0x003DD888=BFT78_s0
-s 0x003DD8A0=BFT79_s0
-s 0x003DD910=BFT80_s0
-s 0x003DD98E=BFT81_s0
-s 0x003DDE84=BFTxx_s1_3DDE84
-s 0x003DE1F0=BFT79_s7
-s 0x003DE228=BFT80_s7
-s 0x003DE256=BFT88_s7
-s 0x003DE28A=BFT90_s7
-s 0x003DE2C8=BFT91_s7
-s 0x003DE2F6=BFTxx_s3_3DE2F6
-s 0x003DE448=BFTxx_s4_3DE448
-s 0x003DE49A=BFTxx_s5_3DE49A
-s 0x003DE5DE=BFTxx_s6_3DE5DE
-s 0x003DEF1C=BFT77_s7
-s 0x003DEF56=BFT82_s0
-s 0x003DEF78=BFT82_s6
-s 0x003DEFFA=BFT82_s2
-s 0x003DF132=BFT83_s0
-s 0x003DF154=BFT83_s6
-s 0x003DF1BA=BFT83_s2
-s 0x003DF750=BFTxx_s3_3DF750
-s 0x003DF75E=BFTxx_s5_3DF75E
-s 0x003DF8C8=BFTxx_s6_3DF8C8
-s 0x003DFFC0=BFT78_s7
-s 0x003DFFFA=BFT81_s7
-s 0x003E002A=BFT89_s7
-s 0x003E005A=BFT92_s7
-s 0x003E12C0=BFTxx_s2_3E12C0
-s 0x003E1A10=BFT84_s0
-s 0x003E1A3A=BFT84_s7
-s 0x003E1A90=BFT84_s2
-s 0x003E1A9E=BFT85_s0
-s 0x003E1B5A=BFT85_s7
-s 0x003E1BC0=BFT85_s8
-s 0x003E1C20=BFT85_s2
-s 0x003E1FA6=BFT86_s0
-s 0x003E202C=BFT86_s7
-s 0x003E20D2=BFT86_s8
-s 0x003E2126=BFT86_s2
-s 0x003E217E=BFT87_s0
-s 0x003E2228=BFT87_s7
-s 0x003E22FE=BFT87_s8
-s 0x003E2352=BFT87_s2
-s 0x003E238A=BFT93_s0
-s 0x003E23B4=BFT93_s7
-s 0x003E241A=BFT94_s7
-s 0x003E249A=BFT93_s2
-s 0x003E24A8=BFT94_s0
-s 0x003E250A=BFT94_s2
-s 0x003E2572=BFT95_s0
-s 0x003E25B8=BFT95_s7
-s 0x003E2610=BFT95_s2
-s 0x003E268C=BFT100_s0
-s 0x003E27D0=BFT100_s7
-s 0x003E2956=BFT101_s0
-s 0x003E29D8=BFT101_s7
-s 0x003E2B86=BFT100_s1
-s 0x003E2C92=BFT100_s3
-s 0x003E2DFC=BFT100_s4
-s 0x003E2E64=BFT100_s6
-s 0x003E3234=BFT101_s1
-s 0x003E3340=BFT101_s3
-s 0x003E3490=BFT101_s4
-s 0x003E34B4=BFT101_s6
-s 0x003E371C=BFT108_s0
-s 0x003E373E=BFT108_s1
-s 0x003E37A4=BFT108_s3
-s 0x003E383C=BFT108_s4
-s 0x003E3860=BFT108_s5
-s 0x003E3872=BFT108_s6
-s 0x003E38C8=BFT108_s2
-s 0x003E3A08=BFT88_s0
-s 0x003E3AD6=BFT89_s0
-s 0x003E3B46=BFT90_s0
-s 0x003E3BB6=BFT91_s0
-s 0x003E3C26=BFT92_s0
-s 0x003E3C96=BFTxx_s1_3E3C96
-s 0x003E3E7A=BFTxx_s3_3E3E7A
-s 0x003E3E8A=BFTxx_s4_3E3E8A
-s 0x003E3EAE=BFTxx_s5_3E3EAE
-s 0x003E3EC0=BFT86_s6
-s 0x003E3F30=BFT87_s6
-s 0x003E4140=BFT96_s6
-s 0x003E41B0=BFT97_s6
-s 0x003E45FC=BFT109_s0
-s 0x003E464C=BFT109_s6
-s 0x003E46A8=BFT109_s2
-s 0x003E4A08=BFT104_s1
-s 0x003E4B0E=BFT105_s0
-s 0x003E4B1E=BFT105_s1
-s 0x003E4B84=BFT105_s3
-s 0x003E4C16=BFT105_s4
-s 0x003E4C3A=BFT105_s6
-s 0x003E5122=BFT105_s2
-s 0x003E54FA=BFT96_s0
-s 0x003E5508=BFT96_s8
-s 0x003E5568=BFT96_s7
-s 0x003E5684=BFT96_s2
-s 0x003E56BC=BFT107_s0
-s 0x003E5734=BFT107_s7
-s 0x003E5ACC=BFTxx_s1_3E5ACC
-s 0x003E5D40=BFTxx_s3_3E5D40
-s 0x003E5D50=BFTxx_s4_3E5D50
-s 0x003E5D74=BFTxx_s5_3E5D74
-s 0x003E5D86=BFT94_s6
-s 0x003E5DF8=BFT95_s6
-s 0x003E62A8=BFT107_s1
-s 0x003E645A=BFT107_s3
-s 0x003E646A=BFT107_s4
-s 0x003E648E=BFT107_s5
-s 0x003E64A0=BFT107_s6
-s 0x003E65E2=BFT107_s2
-s 0x003E672E=BFT97_s0
-s 0x003E68B4=BFT97_s7
-s 0x003E68B8=BFT97_s8
-s 0x003E695A=BFT97_s2
-s 0x003E6BF2=BFT98_s1
-s 0x003E7470=BFT134_s1
-s 0x003E766C=BFT134_s0
-s 0x003E766E=BFT134_s3
-s 0x003E76C0=BFT134_s4
-s 0x003E7744=BFT134_s5
-s 0x003E77C4=BFT134_s6
-s 0x003E7E78=BFT134_s7
-s 0x003E98AE=BFT55_s0
-s 0x003E98B0=BFT55_s2
-s 0x003E98BE=BFTxx_s4_3E98BE
-s 0x003E98D6=BFT55_s7
-s 0x003E99A0=BFT55_s8
-s 0x003E9A2C=BFT56_s0
-s 0x003E9AAA=BFT56_s2
-s 0x003E9B2E=BFT57_s0
-s 0x003E9B9C=BFT57_s2
-s 0x003E9C20=BFT57_s4
-s 0x003E9C38=BFT57_s7
-s 0x003E9C78=BFT112_s0
-s 0x003E9C7C=BFT112_s7
-s 0x003E9E16=BFTxx_s4_3E9E16
-s 0x003E9E2E=BFT112_s8
-s 0x003E9FC4=BFT113_s0
-s 0x003EA05A=BFT113_s2
-s 0x003EA188=BFT114_s0
-s 0x003EA244=BFT114_s2
-s 0x003EA398=BFT115_s0
-s 0x003EA432=BFT115_s2
-s 0x003EA546=BFT116_s0
-s 0x003EA5EC=BFT116_s2
-s 0x003EA6D8=BFT116_s7
-s 0x003EA6F0=BFT116_s8
-s 0x003EA74C=BFT135_s0
-s 0x003EA74E=BFT135_s1
-s 0x003EA75C=BFT135_s3
-s 0x003EA75E=BFT135_s4
-s 0x003EA796=BFT135_s5
-s 0x003EA798=BFT135_s6
-s 0x003EA79C=BFT135_s7
-s 0x003ECDA8=BFTxx_s9_3ECDA8
-s 0x00409482=WaitStackMemoryOverwrite()
-s 0x00409492=isCurrentTask_0x38(R4 [OUT bool])
-s 0x004094AA=poll_flag_0x24_pattern_0x7f0001f8(R4 [OUT ok])
-s 0x004094D2=isBugfixTask0x38Necessary(R4 [IN tid; OUT bool])
-s 0x004095CA=return_9E3C4FC8()
-s 0x004097BE=BugfixTask0x38()
-s 0x0040B5F6=BFT518_s0
-s 0x0040B618=BFT518_s3
-s 0x0040B62E=BFT518_s1
-s 0x0040C922=return_halfword9E50C584()
-s 0x0040C92E=set_halfword9E50C584()
-s 0x0040D3F6=BFT445_s0
-s 0x0040D4AA=BFT445_s7
-s 0x0040D966=BFT445_s8
-s 0x0040DA2E=BFT445_s6
-s 0x0040DA98=BFT445_s2
-s 0x0040DB52=BFT446_s0
-s 0x0040DBBE=BFT446_s2
-s 0x0040DD8C=BFTxx_s8_40DD8C
-s 0x0040DE82=BFTxx_s6_40DE82
-s 0x0040E02C=BFT456_s2
-s 0x0040E0E4=BFT457_s6
-s 0x0040E104=BFT457_s0
-s 0x0040E186=BFT470_s0
-s 0x0040E24E=BFT470_s6
-s 0x0040E638=BFT470_s4
-s 0x0040E658=BFT470_s2
-s 0x0040E694=BFT471_s0
-s 0x0040E770=BFT471_s1
-s 0x0040EBEC=BFT471_s2
-s 0x0040FB44=BFT472_s0
-s 0x0040FB92=BFT472_s2
-s 0x00426474=BFTxx_s1_426474
-s 0x0042CFD4=BFT344_s1
-s 0x0042CFE2=BFT347_s1
-s 0x0042CFF0=BFT341_s1
-s 0x0042CFFE=BFTxx_s1_42CFFE
-s 0x0042D00C=BFTxx_s1_42D00C
-s 0x0042D036=BFT367_s1
-s 0x0042D044=BFT418_s1
-s 0x0042D052=BFT422_s1
-s 0x0042D060=BFT425_s1
-s 0x0042D06E=BFT428_s1
-s 0x0042D07C=BFT431_s1
-s 0x0042D08A=BFT434_s1
-s 0x0042D098=BFT437_s1
-s 0x0042D0A6=BFT440_s1
-s 0x0042D0B4=BFTxx_s1_42D0B4
-s 0x0042D0C2=BFT489_s0
-s 0x0042D0D0=BFT489_s2
-s 0x0042D0DE=BFT490_s0
-s 0x0042D0EC=BFT490_s2
-s 0x0042D0FA=BFT491_s0
-s 0x0042D108=BFT491_s2
-s 0x0042D116=BFT415_s1
-s 0x0042D124=BFT386_s1
-s 0x0042D132=BFT493_s0
-s 0x0042D140=BFT492_s0
-s 0x0042D14E=BFT492_s2
-s 0x0042D15C=BFT493_s2
-s 0x0042D16A=BFT494_s0
-s 0x0042D178=BFT494_s2
-s 0x0042D186=BFT376_s1
-s 0x0042D1A2=BFT496_s0
-s 0x0042D1B0=BFT496_s2
-s 0x0042D1F0=BFTxx_s1_42D1F0
-s 0x0042D1FE=BFT519_s0
-s 0x0042D20C=BFT519_s2
-s 0x0042D21A=BFT520_s0
-s 0x0042D228=BFT520_s2
-s 0x0042EF5E=BFT344_s6
-s 0x0042F8BE=BFT347_s6
-s 0x00430396=BFT341_s4
-s 0x004303A8=BFT341_s5
-s 0x00430600=BFT341_s6
-s 0x00430ACC=BFTxx_s6_430ACC
-s 0x00430EAA=BFTxx_s6_430EAA
-s 0x0043145E=BFT382_s6
-s 0x00431B66=BFT367_s6
-s 0x004347F2=BFT418_s6
-s 0x00434CF8=BFT422_s6
-s 0x004350F8=BFT425_s6
-s 0x00435474=BFT428_s6
-s 0x00435FFE=BFT431_s6
-s 0x00436394=BFT431_s5
-s 0x004369C4=BFT434_s6
-s 0x00437E36=BFTxx_s6_437E36
-s 0x004392F8=BFT491_s7
-s 0x004397F2=BFT415_s5
-s 0x00439A6C=BFT415_s6
-s 0x00439FC6=BFT386_s6
-s 0x0043A1F4=BFT492_s7
-s 0x0043A316=BFT493_s7
-s 0x0043A564=BFT494_s3
-s 0x0043A736=BFTxx_s6_43A736
-s 0x0043ACF6=BFTxx_s5_43ACF6
-s 0x0043ADF0=BFTxx_s6_43ADF0
-s 0x0043B66E=BFT496_s7
-s 0x0043BF4E=BFT440_s6
-s 0x0043D91E=BFT521_s2
-s 0x0044782A=BFT508_s1
-s 0x00447B6A=BFT509_s1
-s 0x00447E08=BFT508_s7
-s 0x0045257C=BFT36_s1
-s 0x0045319A=BFT37_s1
-s 0x0045BC74=BFTxx_s1_45BC74
-s 0x0045BC82=BFTxx_s1_45BC82
-s 0x0045BCAC=BFTxx_s0_45BCAC
-s 0x0045BE1C=BFTxx_s1_45BE1C
-s 0x00462A44=BFT277_s2
-s 0x00462A46=BFT277_s0
-s 0x00462A90=BFTxx_s0_462A90
-s 0x00462B30=BFT288_s1
-s 0x00462B3A=BFT278_s2
-s 0x00462B3C=BFT278_s0
-s 0x00462B5E=BFT295_s1
-s 0x00462B66=BFT297_s1
-s 0x00462B6A=BFT298_s1
-s 0x00462B72=BFT294_s1
-s 0x00462B76=BFT287_s1
-s 0x00462C66=BFT279_s1
-s 0x00462CA2=BFT282_s1

# global data
-s 0x000D3938=tblTaskData
-s 0x6800382C=pCurrentTCB
-s 0x003282C8=txSetsTableV2
-s 0x00384188=ptpTable10xxV2
-s 0x00384464=ptpTable9xxxV2
-s 0x003836B0=ptpTableFCxx_FExxV2
-s 0x003885A4=ptpTableOther
-s 0x9E4530B4=txSet3E
-s 0x9E453100=txSet2E
-s 0x9E453140=txSet2F
-s 0x9E453180=txSet30
-s 0x9E4531C0=txSet22
-s 0x9E4532BC=txSet11
-s 0x9E4532CC=txSet0A
-s 0x9E4532D4=txSet45
-s 0x9E453306=txSet41
-s 0x9E45330A=txSet40
-s 0x9E45330E=txSet38
-s 0x9E453310=txSet10
-s 0x9E453314=txSet0F
-s 0x9E45331E=txSet5F
-s 0x9E45332D=txSet5E
-s 0x9E45333C=txSet5D
-s 0x9E4533FB=txSet5C
-s 0x9E45349B=txSet5B
-s 0x9E45349C=txSet5A
-s 0x9E4534B8=txSet59
-s 0x9E4534C0=txSet58
-s 0x9E4534C8=txSet57
-s 0x9E453549=txSet56
-s 0x9E4535A5=txSet55
-s 0x9E4535B5=txSet54
-s 0x9E4535C8=txSet53
-s 0x9E45362C=txSet52
-s 0x9E453652=txSet51
-s 0x9E453659=txSet50
-s 0x9E453660=txSet4F
-s 0x9E453760=txSet4E
-s 0x9E453788=txSet4C
-s 0x9E453789=txSet4B
-s 0x9E45378A=txSet4A
-s 0x9E453814=txSet49
-s 0x9E453894=txSet48
-s 0x9E45389A=txSet47
-s 0x9E45389D=txSet46
-s 0x9E45389E=txSet44
-s 0x9E4538A0=txSet43
-s 0x9E4538B8=txSet42
-s 0x9E4538BB=txSet3F
-s 0x9E4539B7=txSet3D
-s 0x9E453A03=txSet3C
-s 0x9E453A1D=txSet3B
-s 0x9E453A1F=txSet3A
-s 0x9E453A20=txSet39
-s 0x9E453A21=txSet37
-s 0x9E453A22=txSet36
-s 0x9E453A23=txSet35
-s 0x9E453A24=txSet34
-s 0x9E453A26=txSet33
-s 0x9E453A40=txSet32
-s 0x9E453A43=txSet31
-s 0x9E453A45=txSet2D
-s 0x9E453A76=txSet2C
-s 0x9E453A81=txSet2B
-s 0x9E453A8C=txSet2A
-s 0x9E453A8F=txSet29
-s 0x9E453A92=txSet28
-s 0x9E453A94=txSet27
-s 0x9E453AC0=txSet26
-s 0x9E453ADF=txSet25
-s 0x9E453B0C=txSet24
-s 0x9E453B33=txSet23
-s 0x9E453B47=txSet21
-s 0x9E453B48=txSet20
-s 0x9E453C42=txSet1F
-s 0x9E453D3E=txSet1E
-s 0x9E453D3F=txSet1C
-s 0x9E453D41=txSet1B
-s 0x9E453D56=txSet1A
-s 0x9E453D6F=txSet19
-s 0x9E453D72=txSet18
-s 0x9E453D76=txSet17
-s 0x9E453D7C=txSet16
-s 0x9E453D80=txSet15
-s 0x9E453D9C=txSet14
-s 0x9E453DB4=txSet13
-s 0x9E453DCC=txSet12
-s 0x9E453DD9=txSet0E
-s 0x9E453DDC=txSet0D
-s 0x9E453DDD=txSet0C
-s 0x9E453DE3=txSet0B
-s 0x9E453DF9=txSet09
-s 0x9E453DFF=txSet08
-s 0x9E453E1B=txSet07
-s 0x9E453E37=txSet06
-s 0x9E453E6A=txSet05
-s 0x9E453EB8=txSet04
-s 0x9E453ED3=txSet03
-s 0x9E453EE3=txSet02
-s 0x9E453EE9=txSet01

-j 0x001CA98C=@(0x0032E3FC+23*4)
-j 0x00062846=@(0x000CECE4+17*64)
-j 0x0006359E=@(0x000CF378+7*64)
-j 0x0006DD0C=@(0x000D2528+7*4)
