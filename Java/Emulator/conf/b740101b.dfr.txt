# The main part of this file describes the D3100 "B" firmware, ver 1.01
#
# Usage:
# startDfr.bat -wstructure -wparameters -wint40 -wmemory -waddress -whexcode -x b740101b.dfr.txt -o b740101b.asm b740101b.bin
#

############################### File map: D3100
-i 0x00040000-0x00FFFFFF=0x00000000

############################### Memory map:

-m 0x00040000-0x000407BD=CODE


# Table of offsets used by INT 0x40 :
-m 0x000407BE-0x0004091D=DATA:W


-m 0x0004091E-0x000409FB=CODE

# Softune RTOS Copyright :
#-m 0x000409FC-0x00040A67=DATA:L

# ITRON kernel code
-m 0x00040A68-0x00050545=CODE

-m 0x000542ba-0x0005889D=CODE

# tblTaskData
-m 0x000EB540-0x000EBC27=DATA:L



# Interrupt vector table.
-t 0x000EFC00
#-m 0x000dfc00-0x000dffff=DATA:L


-m 0x00100000-0x0020121B=CODE

-m 0x00267870-0x00309553=CODE

# this part is flashed during firmware update (can be up to 7MB)
-i 0x02100000-0x0216FFFF=0x00840000
-m 0x02100000-0x0212A001=CODE
-m 0x0212A002-0x0216C4E3=DATA:W

############################### Symbols

# syscalls
-s 0x0004091E=sys_unsupported_function (R12 [OUT err_code])
-s 0x00040922=sys_reserved_function (R12 [OUT err_code])
-s 0x0004119C=sys_set_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Set System Clock */)
-s 0x000411BA=sys_get_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Get System Clock */)
-s 0x000411D8=sys_dly_tsk(R4 [IN dly_tim], R12 [OUT err_code] /* Delay Task */)
-s 0x00041234=sys_def_cyc(R4 [IN cycno], R5 [IN ptr_to_pk_dcyc], R12 [OUT err_code] /* Define Cyclic Handler */)
-s 0x000412B2=sys_act_cyc(R4 [IN cycno], R5 [IN cycact], R12 [OUT err_code] /* Activate Cyclic Handler */)
-s 0x00041318=sys_ref_cyc(R4 [IN ptr_to_pk_rcyc], R5 [IN cycno], R12 [OUT err_code] /* Get Cyclic Handler Status */)
-s 0x0004139A=sys_def_alm(R4 [IN almno], R5 [IN ptr_to_pk_dalm], R12 [OUT err_code] /* Define Alarm Handler */)
-s 0x00041428=sys_ref_alm(R4 [IN ptr_to_pk_ralm], R5 [IN almno], R12 [OUT err_code] /* Get Alarm Handler Status */)
-s 0x0004149A=sys_sus_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Suspend Other Task */)
-s 0x0004151E=sys_rsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Resume Suspended Task */)
-s 0x000415A6=sys_frsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Forcibly Resume suspended Task */)
-s 0x00041606=sys_slp_tsk(R12 [OUT err_code] /* Sleep Task */)
-s 0x0004163C=sys_tslp_tsk(R4 [IN timeout], R12 [OUT err_code] /* Sleep Task with Timeout */)
-s 0x000416C0=sys_wup_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Wakeup Other Task */)
-s 0x00041722=sys_can_wup(R4 [IN tsk_id], R12 [OUT err_code], R13 [OUT wakeup_count] /* Cancel Wakeup Request */)
-s 0x00041786=sys_sta_tsk(R4 [IN tsk_id], R5 [IN tsk_param], R12 [OUT err_code] /* Start Task */)
-s 0x00041804=sys_ext_tsk(R12 [OUT err_code] /* Exit Issuing Task */)
-s 0x0004185E=sys_ter_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Terminate Other Task */)
-s 0x000418FC=sys_dis_dsp(R12 [OUT err_code] /* Disable Dispatch */)
-s 0x0004191E=sys_ena_dsp(R12 [OUT err_code] /* Enable Dispatch */)
-s 0x0004193A=sys_chg_pri(R4 [IN tsk_id], R5 [IN tsk_prio], R12 [OUT err_code] /* Change Task Priority */)
-s 0x000419A2=sys_rot_rdq(R4 [IN tsk_prio], R12 [OUT err_code] /* Rotate Tasks on the Ready Queue */)
-s 0x00041A08=sys_rel_wai(R4 [IN tsk_id], R12 [OUT err_code] /* Release Wait of Other Task */)
-s 0x00041A8A=sys_get_tid(R12 [OUT err_code], R13 [OUT tsk_id] /* Get Task Identifier */)
-s 0x00041AAA=sys_ref_tsk(R4 [IN ptr_to_pk_rtsk], R5 [IN tsk_id], R12 [OUT err_code] /* Get Task Status */)
-s 0x00041B7E=sys_sig_sem(R4 [IN sem_id], R12 [OUT err_code] /* Signal Semaphore */)
-s 0x00041BC0=sys_wai_sem(R4 [IN sem_id], R12 [OUT err_code] /* Wait on Semaphore */)
-s 0x00041C02=sys_preq_sem(R4 [IN sem_id], R12 [OUT err_code] /* Poll and request Semaphore */)
-s 0x00041C36=sys_twai_sem(R4 [IN sem_id], R5 [IN timeout], R12 [OUT err_code] /* Wait on Semaphore with Timeout */)
-s 0x00041CBC=sys_ref_sem(R4 [IN ptr_to_pk_rsem], R5 [IN sem_id], R12 [OUT err_code] /* Get Semaphore Status */)
-s 0x00041D06=sys_set_flg(R4 [IN flag_id], R5 [IN set_pattern], R12 [OUT err_code] /* Set Eventflag */)
-s 0x00041DA0=sys_clr_flg(R4 [IN flag_id], R5 [IN clr_pattern], R12 [OUT err_code] /* Clear Eventflag */)
-s 0x00041DC8=sys_wai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag */)
-s 0x00041E50=sys_pol_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag, polling */)
-s 0x00041EA8=sys_twai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [IN timeout; OUT flag_pattern] /* Wait for Eventflag, with Timeout */)
-s 0x00041F66=sys_ref_flg(R4 [IN ptr_to_pk_rflg], R5 [IN flag_id], R12 [OUT err_code] /* Get Eventflag Status */)
-s 0x00041F9C=sys_snd_msg(R4 [IN mailbox_id], R5 [IN ptr_to_pk_msg], R12 [OUT err_code] /* Send Message to Mailbox */)
-s 0x00041FF6=sys_rcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox */)
-s 0x00042046=sys_prcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, polling */)
-s 0x00042094=sys_trcv_msg(R5 [IN mailbox_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, with Timeout */)
-s 0x00042116=sys_ref_mbx(R4 [IN ptr_to_pk_rmbx], R5 [IN mailbox_id], R12 [OUT err_code] /* Get Mailbox Status */)
-s 0x0004219A=sys_get_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block */)
-s 0x0004228E=sys_pget_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block, polling */)
-s 0x0004238E=sys_rel_blk(R4 [IN mempool_id], R5 [OUT blk_start], R12 [OUT err_code] /* Release Variable-Sized Memory Block */)
-s 0x0004254C=sys_ref_mpl(R4 [IN ptr_to_pk_rmempool], R5 [IN mempool_id], R12 [OUT err_code] /* Get Variable-Sized Memorypool Status */)
-s 0x000425C6=sys_get_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block */)
-s 0x00042622=sys_pget_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Poll and Get Fixed-Sized Memory Block */)
-s 0x00042666=sys_tget_blf(R5 [IN mempool_f_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block with Timeout */)
-s 0x00042708=sys_rel_blf(R4 [IN mempool_f_id], R5 [IN ptr; OUT blk_f_start], R12 [OUT err_code] /* Release Fixed-Sized Memory Block */)
-s 0x000427D6=sys_ref_mpf(R4 [IN ptr_to_pk_rmempool_f], R5 [IN mempool_f_id], R12 [OUT err_code] /* Get Fixed-Sized Memorypool Status */)
-s 0x00042812=sys_loc_cpu(R12 [OUT err_code] /* Lock CPU */)
-s 0x00042826=sys_unl_cpu(R12 [OUT err_code] /* Unlock CPU */)
-s 0x0004283A=sys_chg_ilm(R4 [IN ilmask], R12 [OUT err_code] /* Change Interrupt Level Mask */)
-s 0x00042862=sys_ref_ilm(R12 [OUT err_code], R13 [OUT ilmask] /* Get Interrupt Level Mask */)
-s 0x00042886=sys_get_ver(R4 [IN ptr_to_pk_ver], R12 [OUT err_code] /* Get Version Information */)
-s 0x000428C2=sys_ref_sys(R4 [IN ptr_to_pk_rsys], R12 [OUT err_code] /* Get System Status */)

# Tasks
-s 0x00040B6A=SetupTCB
-s 0x00040A68=StartIdleTask
-s 0x00143D10=task_0x01(R4 [IN param])
-s 0x001A0CFE=task_0x02(R4 [IN param])
-s 0x001DA2DC=task_0x03(R4 [IN param])
-s 0x001D74CC=task_0x04(R4 [IN param])
-s 0x001C6E1A=task_0x05(R4 [IN param])
-s 0x001C8E9A=task_0x06(R4 [IN param])
-s 0x001C30FC=task_0x07(R4 [IN param])
-s 0x001CBDFA=task_0x08(R4 [IN param])
-s 0x001CC3E8=task_0x09(R4 [IN param])
-s 0x001C2482=task_0x0A(R4 [IN param])
-s 0x001C04E0=task_0x0B(R4 [IN param])
-s 0x001BF60A=task_0x0C(R4 [IN param])
-s 0x001BFAFC=task_0x0D(R4 [IN param])
-s 0x001BFFEE=task_0x0E(R4 [IN param])
-s 0x001C4A08=task_0x0F(R4 [IN param])
-s 0x001BE12C=task_0x10(R4 [IN param])
-s 0x001BDE96=task_0x11(R4 [IN param])
-s 0x00156880=task_0x12(R4 [IN param])
-s 0x001A091C=task_0x13(R4 [IN param])
-s 0x001DB032=task_0x14(R4 [IN param])
-s 0x001DEAA8=task_0x15(R4 [IN param])
-s 0x001DA412=task_0x16(R4 [IN param])
-s 0x00100106=task_0x17(R4 [IN param] /* Autorun */)
-s 0x001D1B82=task_0x18(R4 [IN param])
-s 0x00109084=task_0x19(R4 [IN param])
-s 0x0019265E=task_0x1A(R4 [IN param])
-s 0x00109C56=task_0x1B(R4 [IN param])
-s 0x001E6B16=task_0x1C(R4 [IN param])
-s 0x00126B06=task_0x1D(R4 [IN param])
-s 0x00123FE4=task_0x1E(R4 [IN param])
-s 0x0011AE18=task_0x1F(R4 [IN param])
-s 0x001143B0=task_0x20(R4 [IN param])
-s 0x001D160E=task_0x21(R4 [IN param])
-s 0x001D13E4=task_0x22(R4 [IN param])
-s 0x00114C50=task_0x23(R4 [IN param])
-s 0x00115078=task_0x24(R4 [IN param])
-s 0x001A64E0=task_0x25(R4 [IN param])
-s 0x001B9E62=task_0x26(R4 [IN param])
-s 0x001D9C24=task_0x27(R4 [IN param])
-s 0x001BC7A8=task_0x28(R4 [IN param])
-s 0x001D8A44=task_0x29(R4 [IN param])
-s 0x00124A54=task_0x2A(R4 [IN param])
-s 0x001B2CE6=task_0x2B(R4 [IN param])
-s 0x0015107C=task_0x2C(R4 [IN param])
-s 0x00141076=task_0x2D(R4 [IN param])
-s 0x002A245E=task_0x2E(R4 [IN param])
-s 0x002B1108=task_0x2F(R4 [IN param])
-s 0x0015107E=task_0x30(R4 [IN param])
-s 0x0015CD60=task_0x31(R4 [IN param])
-s 0x00194F2E=task_0x32(R4 [IN param])
-s 0x00195E84=task_0x33(R4 [IN param])
-s 0x00195F32=task_0x34(R4 [IN param])
-s 0x00143358=task_0x35(R4 [IN param])
-s 0x001DE92A=task_0x36(R4 [IN param])
-s 0x0210610A=task_0x37(R4 [IN param])
-s 0x021055D4=task_0x38(R4 [IN param])
-s 0x021105D8=task_0x39(R4 [IN param])
-s 0x021105FE=task_0x3A(R4 [IN param])
-s 0x021105B2=task_0x3B(R4 [IN param])
-s 0x02107142=task_0x3C(R4 [IN param])
-s 0x0210052A=task_0x3D(R4 [IN param])
-s 0x02103E34=task_0x3E(R4 [IN param])
-s 0x02113BE4=task_0x3F(R4 [IN param])

# other
-s 0x00040000=__start
-s 0x00040670=int_18
-s 0x000409B0=Setup_OS
-s 0x00040D02=UpdateClock_ms()
-s 0x00041AFE=krnl_TableGetRecord(R14 [IN ptr_table; OUT ptr_record], R4 [IN index_1_based])
-s 0x00050018=nullsub_2
-s 0x00100D0E=nullsub_3
-s 0x00102E6C=nullsub_4
-s 0x001047DA=nullsub_5
-s 0x0010790E=dlist_init(R4 [IN ptr_to_list] /*creates sentinel node at the beginning*/)
-s 0x00107916=dlist_is_empty(R4 [IN ptr_to_element; OUT is_empty] )
-s 0x00107922=dlist_insert_before(R4 [IN ptr_to_element], R5 [IN ptr_to_new_element] /*insert R5 before R4*/)
-s 0x00107932=dlist_insert_after(R4 [IN ptr_to_element], R5 [IN ptr_to_new_element] /*insert R5 after R4*/)
-s 0x00107942=dlist_remove(R4 [IN ptr_to_element] /*remove R4 element*/)
-s 0x00107952=dlist_remove_previous(R4 [IN ptr_to_element] /*remove item before R4*/)
-s 0x00107968=dlist_remove_next(R4 [IN ptr_to_element] /*remove item after R4*/)
-s 0x00107980=LowPriority_WaitSem(R4 [IN sem_id])
-s 0x001079BE=LowPriority_PollSem(R4 [IN sem_id; OUT error_code])
-s 0x00107A06=LowPriority_SigSem(R4 [IN sem_id])
-s 0x00107AB2=crc16(R4 [IN size; OUT crc16], R5 [IN ptr_buf])
-s 0x00107FE8=EncryptData(R4 [IN ptr_data], R5 [IN size], R6 [IN IV], R7 [IN ptr_key])
-s 0x0010809C=memcpy_fast(R4 [IN dst], R5 [IN src], R6 [IN count])
-s 0x001080CE=memset_word(R4 [IN dst], R5 [IN word], R6 [IN countBytes])
-s 0x001080FE=memset_fast(R4 [IN dst], R5 [IN byte], R6 [IN count])
-s 0x0011AC34=nullsub_63
-s 0x0011CFFA=nullsub_6
-s 0x0011E1EE=nullsub_64
-s 0x0011E3DC=nullsub_65
-s 0x0011E7AE=nullsub_7
-s 0x0011E7B0=nullsub_8
-s 0x0011E7B2=nullsub_66
-s 0x0011E7B6=nullsub_9
-s 0x0011E7B8=nullsub_10
-s 0x0011E7BA=nullsub_11
-s 0x0011E7BC=nullsub_12
-s 0x0011E7BE=nullsub_13
-s 0x0011E7C0=nullsub_14
-s 0x0011E7C2=nullsub_67
-s 0x0011EEBE=AudioBuff_InitCircular
-s 0x0011F25A=nullsub_15
-s 0x0011FAA0=ptp_SendData
-s 0x001213D2=ptp_OC_FC01
-s 0x0012146C=ptpFunctionFC02
-s 0x00121510=ptp_OC_FE01
-s 0x001215AC=ptpFunctionFE02
-s 0x00121692=ptpFunctionFE03
-s 0x00121726=ptpFunctionFE04
-s 0x001217D6=ptpFunctionFE05
-s 0x0012189C=ptpFunctionFD31
-s 0x0012192E=ptpFunctionFE31
-s 0x001219B2=ptpFunctionFC31
-s 0x00121A08=ptpFunctionFC32
-s 0x00121A5E=ptpFunctionFDC1
-s 0x00121AFE=ptpFunctionFEC1
-s 0x00121B80=ptpFunctionFCC1
-s 0x00121BCE=ptpFunctionFD1C
-s 0x00121C54=ptpFunctionFE1C
-s 0x00121CCE=ptpFunctionFD1D
-s 0x00121D30=ptpFunctionFE1D
-s 0x00121D92=ptpFunctionFC1D
-s 0x00121DCE=ptpFunctionFD1E
-s 0x00121EB6=ptpFunctionFE1E
-s 0x00121FAC=ptpFunctionFD33
-s 0x00122044=ptpFunctionFE33
-s 0x001220D2=ptpFunctionFC33
-s 0x00122120=ptpFunctionFC41
-s 0x00122156=ptpFunctionFC42
-s 0x0012218C=ptpFunctionFE41
-s 0x0012226A=ptpFunctionFE42
-s 0x001222EE=ptpFunctionFC44
-s 0x00122350=ptpFunctionFC45
-s 0x001223E2=ptpFunctionFC46
-s 0x00122460=ptpFunctionFE4C
-s 0x001224E2=ptpFunctionFC4D
-s 0x00122506=ptpFunctionFC51
-s 0x0012254E=ptpFunctionFC52
-s 0x00122584=ptpFunctionFC53
-s 0x0012261A=ptpFunctionFC55
-s 0x00122666=ptpFunctionFD56
-s 0x0012275A=ptpFunctionFC57
-s 0x001227BC=ptpFunctionFE59
-s 0x0012281C=ptpFunctionFC59
-s 0x0012288E=ptpFunctionFC5A
-s 0x001228E0=ptpFunctionFC5B
-s 0x00122914=ptpFunctionFC5C
-s 0x00122940=ptpFunctionFD80
-s 0x00122F30=ptpFunctionFC81
-s 0x00122FA2=ptpFunctionFC82
-s 0x00122FE0=ptpFunctionFC91
-s 0x00123042=ptpFunctionFE91
-s 0x001230FE=ptpFunctionFE93
-s 0x00123186=ptpFunctionFC93
-s 0x001231F8=ptpFunctionFC94
-s 0x00123272=ptpFunctionFC96
-s 0x001232B8=ptpFunctionFE99
-s 0x0012331A=ptpFunctionFCA1
-s 0x001233A8=ptpFunctionFCA2
-s 0x00123464=ptpFunctionFCA3
-s 0x001234CE=ptpFunctionFCA4
-s 0x0012353C=ptpFunctionFCA5
-s 0x0012357A=ptpFunctionFCA6
-s 0x00123620=ptpFunctionFDB1
-s 0x00123636=ptpFunctionFEB1
-s 0x001236C2=ptpFunctionFDB2
-s 0x001237A2=ptpFunctionFEB2
-s 0x00123818=ptpFunctionFDE1
-s 0x00123876=ptpFunctionFCFE
-s 0x00123936=ptpFunctionFCFF
-s 0x001239BC=ptpFunctionFD63
-s 0x00123A68=ptp_OC_FE63
-s 0x00123AFC=ptpFunctionFC80
-s 0x00123B38=ptp_OC_FE34
-s 0x00123BA2=ptp_call_tab_FCxx
-s 0x00124C8E=nullsub_16
-s 0x00129FD2=ptpFunction1001
-s 0x0012A192=ptpFunction1002
-s 0x0012A24A=ptpFunction1003
-s 0x0012A2D8=ptpFunction1004
-s 0x0012A3BC=ptpFunction1005
-s 0x0012A656=ptpFunction1006
-s 0x0012AAE4=ptpFunction1007
-s 0x0012B296=ptpFunction1008
-s 0x0012C7C0=ptpFunction1009
-s 0x0012CD24=ptpFunction100A
-s 0x0012D23E=ptpFunction100B
-s 0x0012D868=ptpFunction100C
-s 0x0012DA9E=ptpFunction100D
-s 0x0012DBD4=ptpFunction100E
-s 0x0012E0FE=ptpFunction100F
-s 0x0012E1F2=ptpFunction1014
-s 0x0012E220=ptpFunction1015
-s 0x0012E24E=ptpFunction1016
-s 0x0012E320=ptpFunction101B
-s 0x0012E8B0=ptpFunction90C0
-s 0x0012F00C=ptpFunction90C1
-s 0x0012F2A6=ptpFunction90C2
-s 0x0012F44C=ptpFunction90C3
-s 0x0012F724=ptpFunction90C7
-s 0x0012F7F0=ptpFunction90C8
-s 0x0012F8D4=ptpFunction90C9
-s 0x0012FA78=ptpFunction90CC
-s 0x0012FC7A=ptpFunction90CD
-s 0x0012FFD8=ptpFunction90CF
-s 0x001301C4=ptpFunction9201
-s 0x00130556=ptpFunction9202
-s 0x001305BE=ptpFunction9203
-s 0x001306E2=ptpFunction9801
-s 0x001307A2=ptpFunction9802
-s 0x001307D0=ptpFunction9803
-s 0x001307FE=ptpFunction9805
-s 0x00130850=ptpFunction9100
-s 0x001308AA=ptpFunction9101
-s 0x00130A2A=ptp_Call_tab_10xx
-s 0x00130ABC=ptp_call_tab_98xx
-s 0x00130B20=ptp_call_tab_9000_92xx
-s 0x00130BB0=ptp_call_tab_91xx
-s 0x001342E0=ptp_Responce_OK
-s 0x00134374=ptp_ResponceError
-s 0x00134D3C=getHalfWord_LE(R4 [IN ptr; OUT halfword])
-s 0x00134D6C=getWord_LE(R4 [IN ptr; OUT halfword])
-s 0x0013589E=ptpFunction90E8
-s 0x001358FA=ptpFunction90E9
-s 0x00135992=ptpFunction90EA
-s 0x001359FA=ptpFunction90EB
-s 0x00135AE6=ptpFunction90EC
-s 0x00135BE4=ptpFunction90ED
-s 0x00135FDE=ptpFunction90EE
-s 0x0013667A=ptpFunction90EF
-s 0x00136700=ptpFunction90F0
-s 0x001368D4=ptpFunction90F1
-s 0x001369D2=ptpFunction90F3
-s 0x00136B70=ptpFunction90F4
-s 0x00136C8C=ptpFunction90F5
-s 0x00136CCE=ptpFunction90F6
-s 0x00136CF2=ptpFunction90F7
-s 0x00136D30=ptpFunction90F8
-s 0x00136D64=ptp_call_tab_90E8_90FE
-s 0x0014DF2C=debug_0
-s 0x001510B8=nullsub_17
-s 0x001510D2=nullsub_18
-s 0x001510D4=nullsub_19
-s 0x001510DA=nullsub_20
-s 0x001510DC=nullsub_21
-s 0x001510E6=nullsub_22
-s 0x0015110C=nullsub_23
-s 0x00151110=nullsub_24
-s 0x00151114=nullsub_25
-s 0x0015111A=nullsub_26
-s 0x0015112A=nullsub_27
-s 0x0015114E=nullsub_28
-s 0x0015C282=FSMedia_initDrives
-s 0x0015C2A8=_FSMedia_CreateDeviceStructure(R4 [IN ptrDeviceStruct])
-s 0x0015C3C2=FSMedia_Attach(R4 [IN devicename; OUT err], R5 [IN ptr_ptrFuncnames], R6 [IN ptr_ptrDevInfo])
-s 0x0015C42E=FSMedia_Dettach(R4 [IN devicename; OUT err], R5 [IN param2])
-s 0x0015C47E=_FSMedia_getDeviceCBPtr(R4 [IN devicename; OUT err], R5 [IN ptr_DeviceCBPtr])
-s 0x0015CE78=I2C_Operation(R4 [IN param; OUT ok])
-s 0x0017D3C4=nullsub_29
-s 0x00193260=nullsub_1
-s 0x0019330A=OnReceive_TxSetxx
-s 0x0019330C=OnReceive_TxSet03
-s 0x00193396=OnReceive_TxSet04
-s 0x001933C6=OnReceive_TxSet05
-s 0x00193422=OnReceive_TxSet06
-s 0x001934C2=OnReceive_TxSet07
-s 0x001935AA=OnReceive_TxSet08
-s 0x0019366C=OnReceive_TxSet09
-s 0x0019367A=OnReceive_TxSet0A
-s 0x00193688=OnReceive_TxSet0B
-s 0x001936DA=OnReceive_TxSet0C
-s 0x00193934=OnReceive_TxSet0E
-s 0x001939FC=OnReceive_TxSet0F
-s 0x00193A42=OnReceive_TxSet11
-s 0x00193D42=OnReceive_TxSet12
-s 0x00193D4C=OnReceive_TxSet13
-s 0x00193D58=OnReceive_TxSet14
-s 0x00193FC6=OnReceive_TxSet15
-s 0x001940CE=OnReceive_TxSet16
-s 0x001940D8=OnReceive_TxSet17
-s 0x001940DA=OnReceive_TxSet18
-s 0x00194158=OnReceive_TxSet19
-s 0x001941C4=OnReceive_TxSet1A
-s 0x001941EA=OnReceive_TxSet1D
-s 0x001942EE=OnReceive_TxSet1E
-s 0x00194304=OnReceive_TxSet1F
-s 0x00194314=OnReceive_TxSet20
-s 0x00194324=OnReceive_TxSet21
-s 0x00194334=OnReceive_TxSet23
-s 0x00194336=OnReceive_TxSet24
-s 0x001944AA=OnReceive_TxSet26
-s 0x0019453A=OnReceive_TxSet27
-s 0x00194578=OnReceive_TxSet2B
-s 0x0019457A=OnReceive_TxSet2C
-s 0x0019457C=OnReceive_TxSet2D
-s 0x00194614=OnReceive_TxSet30
-s 0x00194658=OnReceive_TxSet31
-s 0x00194688=OnReceive_TxSet32
-s 0x001946DA=OnReceive_TxSet33
-s 0x001946DC=OnReceive_TxSet34
-s 0x00194824=OnReceive_TxSet39
-s 0x0019488E=OnReceive_TxSet3B
-s 0x00194A18=OnReceive_TxSet3C
-s 0x00194A26=OnReceive_TxSet3E
-s 0x00194E5A=OnReceive_TxSet41
-s 0x00194E66=OnReceive_TxSet44
-s 0x00194ED0=OnReceive_TxSet48
-s 0x00194EDE=OnReceive_TxSet49
-s 0x00194EEC=OnReceive_TxSet4A
-s 0x00194EFA=OnReceive_TxSet4B
-s 0x00194F0A=OnReceive_TxSet4F
-s 0x001974FA=FS_formatCard(R4 [IN deviceId; OUT err])
-s 0x00197CC8=FS_isMBRBootsectorOk(R4 [IN deviceId; OUT ok])
-s 0x0019F0DE=nullsub_30
-s 0x0019FCAA=nullsub_31
-s 0x001A03E0=LoadLanguage(R4 [IN index])
-s 0x001B4D5E=BFT238_s6
-s 0x001B52BC=BFT245_s1
-s 0x001B53BC=BFT245_s0
-s 0x001B53E0=BFT245_s6
-s 0x001B5434=BFT245_s3
-s 0x001B5462=BFT245_s2
-s 0x001B583A=BFT238_s2
-s 0x001B5986=BFT238_s1
-s 0x001B76E4=nullsub_32
-s 0x001B76F0=nullsub_33
-s 0x001B77D0=nullsub_34
-s 0x001B77E2=nullsub_35
-s 0x001BCEAE=nullsub_36
-s 0x001BD584=SemaphorePtr_SetID(R4 [IN ptr_to_id; OUT bool_OK], R5 [IN id])
-s 0x001BD58E=SignalSemaphorePtr(R4 [IN ptr_to_id; OUT bool_OK])
-s 0x001BD5AE=WaitOnSemaphorePtr(R4 [IN ptr_to_id; OUT bool_OK])
-s 0x001BD5CE=WaitOnSemaphoreTimeout(R4 [IN ptr_to_id; OUT bool_OK], R5 [IN timeout])
-s 0x001BD5F0=PollAndRequestSemaphore(R4 [IN ptr_to_id; OUT bool_OK])
-s 0x001BD63E=EventPtr_SetPtr(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN flag_id])
-s 0x001BD648=EventPtr_SetFlag(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN set_pattern])
-s 0x001BD668=EventPtr_ClearFlag(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN clr_pattern])
-s 0x001BD68E=EventPtr_WaitFlag_OR(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wai_pattern], R6 [IN ptr_out_pattern])
-s 0x001BD6BA=EventPtr_WaitFlag_AND(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wai_pattern], R6 [IN ptr_out_pattern])
-s 0x001BD6E6=EventPtr_WaitFlag_OR_Timeout(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wait_pattern], R6 [IN ptr_out_pattern], R7 [IN timeout])
-s 0x001BD718=EventPtr_WaitFlag_AND_Timeout(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wait_pattern], R6 [IN ptr_out_pattern], R7 [IN timeout])
-s 0x001BD74A=EventPtr_PollFlag(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN wait_pattern], R6 [IN ptr_out_pattern])
-s 0x001BD776=MailboxPtr_SetID(R4 [IN ptr_to_flag_id; OUT bool_OK], R5 [IN mailbox_id])
-s 0x001BD780=MailboxPtr_SendMessage(R4 [IN ptr_to_mbx_id; OUT bool_OK], R5 [IN ptr_msg])
-s 0x001BD7A4=MailboxPtr_RecieveMessage(R4 [IN ptr_to_mbx_id; OUT bool_OK], R5 [IN ptr_to_msgptr])
-s 0x001BD92E=nullsub_37
-s 0x001BD930=callInttableFunction(R4 [IN fn_idx])
-s 0x001BDD8E=nullsub_38
-s 0x001BDE72=nullsub_39
-s 0x001C61F4=nullsub_40
-s 0x001C61F6=nullsub_41
-s 0x001C654C=nullsub_60
-s 0x001C8E84=nullsub_42
-s 0x001CC006=nullsub_43
-s 0x001CC008=nullsub_44
-s 0x001D1CAA=nullsub_45
-s 0x001D5AFA=debug_audio
-s 0x001DA11C=QueueInit(R4 [IN ptr_queue], R5 [IN param], R6 [IN param], R7 [IN param])
-s 0x001DA1AC=QueueIsEmpty(R4 [IN ptr_queue; OUT is_empty])
-s 0x001DA1D8=QueueAdd(R4 [IN ptr_queue; OUT err], R5 [IN ptr_data])
-s 0x001DA248=QueueTake(R4 [IN ptr_queue], R5 [IN ptr_data])
-s 0x001DC4A6=BFTxx_s0_1DC4A6
-s 0x001DC4A8=BFT247_s6
-s 0x001DC76E=BFT248_s6
-s 0x001DC9C8=BFTxx_s2_1DC9C8
-s 0x001E3F0E=nullsub_46
-s 0x001E9926=_FS_getFileCBPtr(R4 [IN filenumHI; OUT err], R5 [IN filenumLO], R6 [IN ptr_filePtr])
-s 0x001EC324=FS_delete(R4 [IN fileORdirstring; OUT err], R5 [IN 0x10_dir])
-s 0x001EC6A2=FS_open(R4 [IN name;OUT filenum], R5 [IN mode], R6 [IN byteAmode])
-s 0x001EC9D6=FS_read(R4 [IN filenum;OUT err], R5 [IN buf], R6 [IN count], R7 [IN ptr_gotCount])
-s 0x001ECA7E=FS_write(R4 [IN filenum;OUT err], R5 [IN buf], R6 [IN count], R7 [IN ptr_wroteCount])
-s 0x001ECB64=FS_close(R4 [IN filenum; OUT err])
-s 0x001ECD4A=_FS_lseek64Ex(R4 [IN filenum; OUT ok], R5 [IN posHI], R6 [IN posLO], R7 [IN ptr_newPos64] /* , IN 0_set_1_current_2_end, IN 0_FAT32_1_EXFAT */)
-s 0x001ECECC=FS_lseek(R4 [IN filenum; OUT newPos], R5 [IN pos], R6 [IN 0_set_1_current_2_end])
-s 0x001ECF18=FS_lseek64(R4 [IN filenum; OUT ok], R5 [IN posHI], R6 [IN posLO], R7 [IN ptr_newPos64] /* , IN 0_set_1_current_2_end */)
-s 0x001ECF3A=FS_fsetAttribute(R4 [IN filenum;OUT err], R5 [IN byteAmode])
-s 0x001ECFC0=FS_fgetAttribute(R4 [IN filenum;OUT err_or_byteAmode])
-s 0x001ED02A=FS_mkdir(R4 [IN dirname;OUT err])
-s 0x001ED144=FS_rmdir(R4 [IN dirname;OUT err])
-s 0x001ED15C=FS_remove(R4 [IN filename;OUT err])
-s 0x001ED174=fs_rename(R4 [IN srcFilename;OUT err], R5 [IN dstFilename])
-s 0x001ED1C6=FAT_fs_rename
-s 0x001ED4AA=ExFAT_fs_rename
-s 0x001ED8EA=FAT_getVolLabel(R4 [IN drivename;OUT err], R5 [IN labelString12byte])
-s 0x001ED9E4=FAT_setVolLabel(R4 [IN drivename;OUT err], R5 [IN labelString12byte])
-s 0x001EDC4E=FS_stat(R4 [IN filename;OUT err], R5 [IN statBuf])
-s 0x001EDE30=FS_setAttribute(R4 [IN filename;OUT err], R5 [IN byteAmode])
-s 0x001EDF74=FS_getAttribute(R4 [IN filename;OUT err_or_byteAmode])
-s 0x001EE010=FS_getFreeSpace(R4 [IN drivename;OUT err], R5 [IN ptrClusterSize], R6 [IN ptrTotalClusters], R7 [IN ptrFreeClusters])
-s 0x001EE352=_FS_getDirCBPtr(R4 [IN dirnumHI; OUT err], R5 [IN dirnumLO], R6 [IN ptr_dirPtr])
-s 0x001EE458=FS_opendir(R4 [IN path; OUT err], R5 [IN ptr_dirnum])
-s 0x001EE46A=FS_opendirEx(R4 [IN ptr_statInfo; OUT err], R5 [IN path], R6 [IN ptr_dirnum])
-s 0x001EE9F6=FS_readdir(R4 [IN dirnum; OUT err], R5 [IN ptr_fsdirentXX])
-s 0x001EEA28=FAT_readdir(R4 [IN handle; OUT err], R5 [IN ptr_fsdirent])
-s 0x001EED4A=FS_closedir(R4 [IN dirnum; OUT err])
-s 0x001EEDBC=FS_startMDF
-s 0x001EEE56=FS_endMDF
-s 0x001F9850=FS_initDrv(R4 [IN drivename; OUT err], R5 [IN ptrFuncnames], R6 [IN ptrDevInfo])
-s 0x001F995A=FS_endDrv(R4 [IN drivename; OUT err])
-s 0x001FA850=nullsub_47
-s 0x001FA8D8=FS_getPathDrive(R4 [IN path; OUT err], R5 [IN for_drivename], R6 [IN ptr_ptr_rest_path])
-s 0x001FE3A6=SUB_double(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE3AC=ADD_double(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE594=SUB_float(R4 [IN floatA; OUT res], R5 [IN floatB])
-s 0x001FE59A=ADD_float(R4 [IN floatA; OUT res], R5 [IN floatB])
-s 0x001FE68A=ADD_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE690=AND_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE696=CMP_double(R4 [IN aHi; OUT res], R5 [IN aLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE6C8=CMP_float(R4 [IN floatA; OUT res], R5 [IN floatB])
-s 0x001FE6F2=CMP_int64(R4 [IN aHi; OUT res], R5 [IN aLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE704=CMP_uint64(R4 [IN aHi; OUT res], R5 [IN aLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FE750=DIV_double(R4 [IN dividendHi; OUT quotHi], R5 [IN dividendLo; OUT quotLo], R6 [IN diviHi], R7 [IN diviLo])
-s 0x001FE958=DIV_float(R4 [IN dividend; OUT quot], R5 [IN divisor])
-s 0x001FE9FA=DIV_int(R4 [IN dividend; OUT quotient], R5 [IN divisor])
-s 0x001FEA48=DIV_int64(R4 [IN dividendHi; OUT quotHi], R5 [IN dividendLo; OUT quotLo], R6 [IN divHi], R7 [IN divLo])
-s 0x001FEAE6=dtoi(R4 [IN doubleHi; OUT int], R5 [IN doubleLo])
-s 0x001FEB24=dtoui(R4 [IN doubleHi; OUT uint], R5 [IN doubleLo])
-s 0x001FEB62=ftod(R4 [IN float; OUT doubleHi], R5 [OUT doubleLo])
-s 0x001FEB8A=ftoi(R4 [IN float; OUT int])
-s 0x001FEBC2=ftoui(R4 [IN float; OUT uint])
-s 0x001FEBFA=itod(R4 [IN int; OUT doubleHi], R5 [OUT doubleLo])
-s 0x001FEC14=itof(R4 [IN int; OUT float])
-s 0x001FEC2E=int2int64(R4 [IN int; OUT resHi], R5 [OUT resLo])
-s 0x001FEC34=int64toint(R4 [IN hi; OUT res], R5 [IN lo])
-s 0x001FEC38=MOD_int(R4 [IN dividend; OUT remainder], R5 [IN divisor])
-s 0x001FECD4=MUL_double(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FEDD8=MUL_float(R4 [IN floatA; OUT resFloat], R5 [IN floatB])
-s 0x001FEE4C=MUL_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FEE60=OR_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FEE66=SHL_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN shiftHi], R7 [IN shiftLo])
-s 0x001FEE82=SAR_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN shiftHi], R7 [IN shiftLo])
-s 0x001FEE9E=SHR_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN shiftHi], R7 [IN shiftLo])
-s 0x001FEEBA=SUB_uint64(R4 [IN aHi; OUT resHi], R5 [IN aLo; OUT resLo], R6 [IN bHi], R7 [IN bLo])
-s 0x001FEEC0=DIV_uint(R4 [IN dividend; OUT quotient], R5 [IN divisor])
-s 0x001FEF08=DIV_uint64(R4 [IN dividendHi; OUT quotHi], R5 [IN dividendLo; OUT quotLo], R6 [IN divHi], R7 [IN divLo])
-s 0x001FEF36=uint2double(R4 [IN uint; OUT doubleHi], R5 [OUT doubleLo])
-s 0x001FEF80=uint2float(R4 [IN uint; OUT float])
-s 0x001FEFD2=uint2uint64(R4 [IN uint; OUT uint64Hi], R5 [OUT uint64Lo])
-s 0x001FEFD8=MOD_uint(R4 [IN dividend; OUT remainder], R5 [IN divisor])
-s 0x001FF020=MOD_uint64(R4 [IN dividendHi; OUT remHi], R5 [IN dividendLo; OUT remLo], R6 [IN divHi], R7 [IN divLo])
-s 0x001FF05A=abs(R4 [IN value; OUT res])
-s 0x001FF068=atoi(R4 [IN str; OUT int])
-s 0x001FF0D6=ceil(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x001FF1BC=floor(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x001FF2A2=abs_1(R4 [IN value; OUT res])
-s 0x001FF2B0=log(R4 [IN doubleXHi; OUT outHi], R5 [IN doubleXLo; OUT outLo], R6 [IN doubleYHi], R7 [IN doubleYLo])
-s 0x001FF4BA=memcmp(R4 [IN source1; OUT res], R5 [IN source2], R6 [IN count])
-s 0x001FF4D4=memcpy(R4 [IN dst; OUT dst], R5 [IN source], R6 [IN count])
-s 0x001FF4E4=memmove(R4 [IN dst; OUT dst], R5 [IN source], R6 [IN count])
-s 0x001FF506=memset(R4 [IN dst; OUT dst], R5 [IN val], R6 [IN count])
-s 0x001FF514=pow(R4 [IN doubleXHi; OUT outHi], R5 [IN doubleXLo; OUT outLo], R6 [IN doubleYHi], R7 [IN doubleYLo])
-s 0x001FFCA2=sprintf(R4 [IN dst; OUT chars], R5 [IN formatstring], R6 [IN param3], R7 [IN param4])
-s 0x001FFD3C=sqrt(R4 [IN doubleHi; OUT outHi], R5 [IN doubleLo; OUT outLo])
-s 0x001FFF1A=strcat(R4 [IN dst; OUT dst], R5 [IN src])
-s 0x001FFF34=strchr(R4 [IN ptr; OUT pos], R5 [IN char])
-s 0x001FFF46=strcmp(R4 [IN str1; OUT res], R5 [IN str2])
-s 0x001FFF5A=strcpy(R4 [IN dst; OUT dst], R5 [IN src])
-s 0x001FFF68=strlen(R4 [IN ptr; OUT len])
-s 0x001FFF78=strncmp(R4 [IN str1; OUT res], R5 [IN str2], R6 [IN n])
-s 0x001FFF96=strncpy(R4 [IN dst; OUT dst], R5 [IN src], R6 [IN n])
-s 0x001FFFB6=strstr(R4 [IN where; OUT pos], R5 [iN what])
-s 0x001FFFE8=strtok(R4 [IN str; OUT ptr_token], R5 [IN ptr_delimeters])
-s 0x0020007E=strtol(R4 [IN str; OUT int], R5 [IN ptr_endptr], R6 [IN base])
-s 0x00200108=vsprintf(R4 [IN dst; OUT chars], R5 [IN formatstring], R6 [IN va_list])
-s 0x00267888=nullsub_48
-s 0x002712A0=BFTxx_s1_2712A0
-s 0x00271792=BFTxx_s1_271792
-s 0x00271B4E=BFTxx_s5_271B4E
-s 0x00271B90=BFT228_s5
-s 0x00271BA2=BFTxx_s4_271BA2
-s 0x00271BB0=BFTxx_s1_271BB0
-s 0x0027217C=BFTxx_s6_27217C
-s 0x00273C5A=nullsub_49
-s 0x002743D0=BFT122_s6
-s 0x00274514=BFT124_s6
-s 0x00274CCE=BFT381_s5
-s 0x00274D04=BFTxx_s1_274D04
-s 0x00274F58=BFTxx_s6_274F58
-s 0x0027559E=nullsub_50
-s 0x002755E2=nullsub_51
-s 0x002755E4=BFT50_s7
-s 0x00275618=BFT51_s0
-s 0x002756C4=BFT50_s4
-s 0x00275728=BFT51_s4
-s 0x002757CA=BFT51_s7
-s 0x00275850=BFT51_s2
-s 0x00275912=BFT50_s8
-s 0x002759F0=BFT52_s0
-s 0x00275A68=BFT52_s4
-s 0x00275B0A=BFT52_s2
-s 0x00275C6C=BFT52_s7
-s 0x00275CEC=BFT53_s0
-s 0x00275D42=BFT53_s7
-s 0x00275D62=BFT53_s2
-s 0x00275E00=BFT54_s0
-s 0x00275E98=BFT54_s2
-s 0x00275F40=BFT54_s4
-s 0x00275F82=BFT54_s7
-s 0x00276018=BFT58_s4
-s 0x0027604E=BFT58_s0
-s 0x002760B8=BFT58_s2
-s 0x0027610A=BFT58_s7
-s 0x0027618E=BFT59_s0
-s 0x0027623C=BFT59_s4
-s 0x00276276=BFT59_s2
-s 0x002765B0=BFT61_s0
-s 0x002766EE=BFT61_s4
-s 0x00276728=BFT61_s2
-s 0x00276960=BFT97_s0
-s 0x00276A00=BFT97_s2
-s 0x00276B86=BFT98_s0
-s 0x00276BA0=BFT98_s8
-s 0x00276D60=BFT98_s2
-s 0x00276DF6=BFT99_s0
-s 0x00276EAC=BFT99_s2
-s 0x00276FF2=BFT100_s0
-s 0x002770A8=BFT100_s2
-s 0x002771EE=BFT101_s0
-s 0x00277284=BFT101_s2
-s 0x00277398=BFT102_s0
-s 0x00277442=BFT102_s2
-s 0x00277588=BFT103_s0
-s 0x002775DE=BFT103_s2
-s 0x00277656=BFT104_s0
-s 0x002776AC=BFT104_s5
-s 0x002776BE=BFT104_s7
-s 0x002776D8=BFT104_s4
-s 0x0027773A=BFT104_s2
-s 0x002777B6=BFT105_s0
-s 0x0027780C=BFT105_s2
-s 0x00277860=BFT108_s0
-s 0x002778B6=BFT108_s2
-s 0x00277990=BFT108_s7
-s 0x002779AA=BFT109_s8
-s 0x00277AA8=BFT110_s0
-s 0x00277B42=BFT110_s2
-s 0x00277C1A=BFT111_s0
-s 0x00277CC6=BFT111_s2
-s 0x00277DCE=BFT112_s0
-s 0x00277E24=BFT112_s2
-s 0x00277E9C=BFT113_s0
-s 0x00277EF2=BFT113_s2
-s 0x00277F7E=BFT114_s0
-s 0x00278024=BFT114_s7
-s 0x0027803E=BFT114_s2
-s 0x0027828C=BFT116_s3
-s 0x00278408=BFT116_s4
-s 0x00278440=BFT116_s2
-s 0x002784A0=BFT117_s0
-s 0x002785D2=BFT117_s5
-s 0x002786AE=BFT117_s6
-s 0x0027882C=BFT117_s2
-s 0x002788B8=BFT118_s0
-s 0x00278934=BFT118_s6
-s 0x00278A48=BFT118_s3
-s 0x00278A58=BFT118_s5
-s 0x00278A7A=BFT119_s0
-s 0x00278AEE=BFT119_s2
-s 0x00279188=BFT129_s0
-s 0x002791A0=BFT129_s7
-s 0x00279258=BFT129_s2
-s 0x002795E2=BFT139_s7
-s 0x002795EC=BFT139_s2
-s 0x002795FC=BFT149_s7
-s 0x00279606=BFT149_s2
-s 0x00279616=BFT195_s2
-s 0x00279668=BFT178_s0
-s 0x002796EE=BFT178_s1
-s 0x0027981A=BFT178_s6
-s 0x0027A140=BFT179_s0
-s 0x0027A78E=BFT174_s0
-s 0x0027A79E=BFT174_s8
-s 0x0027A7F0=BFT177_s0
-s 0x0027A866=BFT177_s2
-s 0x0027A926=BFT176_s0
-s 0x0027A97C=BFT176_s3
-s 0x0027AAC4=BFTxx_s1_27AAC4
-s 0x0027AEFC=BFTxx_s3_27AEFC
-s 0x0027AFF6=BFTxx_s4_27AFF6
-s 0x0027B0FE=BFTxx_s5_27B0FE
-s 0x0027B354=BFTxx_s6_27B354
-s 0x0027BC5A=BFTxx_s0_27BC5A
-s 0x0027BCE8=BFTxx_s7_27BCE8
-s 0x0027BD14=BFT184_s7
-s 0x0027BD28=BFTxx_s8_27BD28
-s 0x0027C208=BFTxx_s2_27C208
-s 0x0027C31E=BFT182_s0
-s 0x0027C3BA=BFT182_s2
-s 0x0027C468=BFT183_s0
-s 0x0027C502=BFT183_s2
-s 0x0027C5B2=BFT184_s0
-s 0x0027C6A0=BFT184_s2
-s 0x0027C88E=BFT186_s0
-s 0x0027CA4A=BFT186_s2
-s 0x0027CCBA=BFT185_s0
-s 0x0027CD78=BFT185_s2
-s 0x0027CF1A=BFT188_s1
-s 0x0027D15E=BFT188_s0
-s 0x0027D176=BFT188_s3
-s 0x0027D1B8=BFT188_s4
-s 0x0027D21C=BFT188_s5
-s 0x0027D2F4=BFT188_s6
-s 0x0027E056=BFT187_s0
-s 0x0027E24E=BFT187_s2
-s 0x0027E53C=BFT166_s7
-s 0x0027E594=BFT166_s8
-s 0x0027E660=BFT167_s0
-s 0x0027E6C0=BFT168_s0
-s 0x0027E720=BFT169_s0
-s 0x0027E780=BFT170_s0
-s 0x0027E7E0=BFT167_s2
-s 0x0027E896=BFT168_s2
-s 0x0027E942=BFT169_s2
-s 0x0027E9EE=BFT170_s2
-s 0x0027EAA0=BFT166_s2
-s 0x0027EB02=BFT211_s7
-s 0x0027EB1C=BFT211_s2
-s 0x0027EB32=BFT1_s7
-s 0x0027EB46=BFT1_s0
-s 0x0027EB62=BFT1_s8
-s 0x0027EC02=BFT1_s2
-s 0x0027ECC6=BFT2_s2
-s 0x0027ED2E=BFT4_s0
-s 0x0027ED84=BFT2_s7
-s 0x0027EDD8=BFT4_s3
-s 0x0027EF26=BFT4_s6
-s 0x0027F146=BFT4_s2
-s 0x0027F220=BFT5_s2
-s 0x0027F22E=BFT7_s0
-s 0x0027F276=BFT7_s3
-s 0x0027F278=BFT7_s2
-s 0x0027F354=BFT8_s0
-s 0x0027F3C0=BFT8_s3
-s 0x0027F492=BFT8_s2
-s 0x0027F5EC=BFT9_s0
-s 0x0027F63E=BFT9_s2
-s 0x0027F6B6=BFT9_s7
-s 0x0027F6FA=BFT10_s0
-s 0x0027F6FC=BFT10_s8
-s 0x0027F74E=BFT10_s2
-s 0x0027F78C=BFT11_s1
-s 0x0027FA00=BFT12_s0
-s 0x0027FA6A=BFT12_s2
-s 0x0027FB12=BFT13_s0
-s 0x0027FB64=BFT13_s2
-s 0x0027FBDC=BFT13_s7
-s 0x0027FC12=BFT14_s0
-s 0x0027FC64=BFT14_s2
-s 0x0027FCDC=BFTxx_s0_27FCDC
-s 0x0027FCDE=BFT15_s8
-s 0x0027FD66=BFT15_s3
-s 0x0027FD94=BFT15_s2
-s 0x0027FDB0=BFT15_s7
-s 0x0027FDFA=BFT18_s0
-s 0x0027FE7A=BFT18_s6
-s 0x0027FEE6=BFT18_s2
-s 0x0027FFC0=BFT17_s8
-s 0x00280048=BFT17_s2
-s 0x0028011A=BFT19_s0
-s 0x00280184=BFT19_s6
-s 0x002801F0=BFT19_s2
-s 0x0028029A=BFT20_s2
-s 0x002802A8=BFT20_s7
-s 0x00280304=BFT23_s0
-s 0x0028054C=BFT23_s2
-s 0x00280670=BFT22_s0
-s 0x00280672=BFT22_s8
-s 0x002806B0=BFT22_s6
-s 0x00280742=BFT22_s2
-s 0x00280BD0=BFT62_s0
-s 0x00280BDA=BFT62_s7
-s 0x00280C80=BFT62_s8
-s 0x002810C4=BFT62_s2
-s 0x002811BA=BFT65_s0
-s 0x002811BC=BFT65_s3
-s 0x002811FE=BFT65_s5
-s 0x0028126E=BFT65_s6
-s 0x002813FE=BFT72_s0
-s 0x00281466=BFT72_s2
-s 0x002814C4=BFT72_s7
-s 0x00281532=BFT72_s6
-s 0x00281990=BFT73_s0
-s 0x00281A26=BFT73_s2
-s 0x00281BF8=BFT74_s0
-s 0x00281C08=BFT74_s4
-s 0x00281C50=BFT74_s7
-s 0x00281CC2=BFT74_s6
-s 0x00281CE2=BFT74_s2
-s 0x002821BE=BFT76_s0
-s 0x00282214=BFT76_s2
-s 0x002822CE=BFT77_s8
-s 0x00282370=BFT78_s0
-s 0x00282426=BFT78_s2
-s 0x0028258E=BFT79_s0
-s 0x002825E4=BFT79_s2
-s 0x00282660=BFT80_s0
-s 0x002826B2=BFT80_s2
-s 0x0028272A=BFTxx_s0_28272A
-s 0x0028272C=BFTxx_s8_28272C
-s 0x002827A0=BFTxx_s6_2827A0
-s 0x00282C6A=BFTxx_s1_282C6A
-s 0x002831B6=BFT81_s2
-s 0x002831C4=BFT82_s0
-s 0x00283200=BFT82_s1
-s 0x002837E8=BFT84_s0
-s 0x00283852=BFT84_s2
-s 0x002838FA=BFT85_s0
-s 0x00283950=BFT85_s2
-s 0x002839E0=BFT83_s1
-s 0x00284472=BFT86_s0
-s 0x00284784=BFT86_s2
-s 0x00284BE6=BFT87_s0
-s 0x00284C62=BFT87_s2
-s 0x00284D04=BFT88_s0
-s 0x00284D06=BFT88_s8
-s 0x00284D26=BFT88_s6
-s 0x00284DC6=BFT88_s2
-s 0x00284ED4=BFT89_s1
-s 0x00284F8E=BFT90_s0
-s 0x00284FE0=BFT90_s2
-s 0x00285058=BFT91_s4
-s 0x002850BC=BFT91_s6
-s 0x002856B0=BFT91_s0
-s 0x002856B2=BFT91_s7
-s 0x002857CE=BFT92_s0
-s 0x002857E4=BFT92_s1
-s 0x00285AEC=BFT92_s4
-s 0x00285CAE=BFT127_s0
-s 0x00285CDE=BFT127_s4
-s 0x00285D00=BFT127_s3
-s 0x00285D08=BFT127_s5
-s 0x00285D5A=BFT127_s6
-s 0x002860D4=BFT127_s2
-s 0x00286148=BFT128_s0
-s 0x002861CE=BFT128_s4
-s 0x0028620E=BFT128_s3
-s 0x00286216=BFT128_s6
-s 0x00286A72=BFT128_s2
-s 0x00286BA8=BFT94_s0
-s 0x00286BAA=BFT94_s8
-s 0x00286BE0=BFT94_s4
-s 0x00286C22=BFT94_s7
-s 0x00286C78=BFT94_s2
-s 0x00286C86=BFT95_s0
-s 0x00286CD8=BFT95_s2
-s 0x00286D8A=BFT96_s0
-s 0x00286D8C=BFT96_s3
-s 0x00286DB8=BFT96_s4
-s 0x00286DE8=BFT96_s6
-s 0x00287652=BFT64_s0
-s 0x0028769A=BFT64_s3
-s 0x0028769C=BFT64_s7
-s 0x002876E0=BFT64_s1
-s 0x00287744=BFT64_s2
-s 0x002879F8=BFT63_s0
-s 0x00287A1A=BFT63_s2
-s 0x00287C4E=BFT66_s0
-s 0x00287CA4=BFT66_s8
-s 0x00287D34=BFT66_s2
-s 0x00287DA8=BFTxx_s3_287DA8
-s 0x00287DEC=BFTxx_s5_287DEC
-s 0x00287EE4=BFT69_s0
-s 0x00287F58=BFT70_s0
-s 0x00287FCC=BFTxx_s2_287FCC
-s 0x0028810A=BFT71_s0
-s 0x00288160=BFT71_s2
-s 0x00288658=BFT24_s0
-s 0x00288692=BFT24_s7
-s 0x002886A6=BFT24_s8
-s 0x00288C52=BFT24_s2
-s 0x00288C62=nullsub_52
-s 0x00288C64=BFT25_s0
-s 0x00288C86=BFT25_s2
-s 0x00288CE6=BFT25_s7
-s 0x00289042=BFT120_s7
-s 0x00289202=BFT122_s0
-s 0x00289214=BFT124_s0
-s 0x00289230=BFTxx_s1_289230
-s 0x0028928A=BFTxx_s3_28928A
-s 0x002892C8=BFTxx_s4_2892C8
-s 0x00289312=BFTxx_s6_289312
-s 0x0028943A=BFTxx_s1_28943A
-s 0x002896D0=BFT121_s2
-s 0x0028970A=BFT123_s2
-s 0x0028A13E=BFT125_s0
-s 0x0028A186=BFT125_s3
-s 0x0028A188=BFT125_s2
-s 0x0028A268=BFT31_s0
-s 0x0028A2D2=BFT31_s2
-s 0x0028A37A=BFT31_s4
-s 0x0028A3CC=BFT31_s5
-s 0x0028A550=BFT31_s7
-s 0x0028A582=BFT32_s0
-s 0x0028A65C=BFT32_s7
-s 0x0028A690=BFT32_s2
-s 0x0028A8EA=BFT33_s0
-s 0x0028A920=BFT33_s3
-s 0x0028A958=BFT33_s4
-s 0x0028A9B2=BFT33_s5
-s 0x0028A9FA=BFT33_s6
-s 0x0028B260=nullsub_53
-s 0x0028B262=BFT34_s0
-s 0x0028B30A=BFT34_s2
-s 0x0028B452=BFT35_s0
-s 0x0028B4A8=BFT35_s7
-s 0x0028B4FE=BFT38_s7
-s 0x0028B594=BFT38_s2
-s 0x0028B5E8=BFT36_s0
-s 0x0028B630=BFT36_s3
-s 0x0028B632=BFT36_s4
-s 0x0028B680=BFT36_s5
-s 0x0028B692=BFT36_s6
-s 0x0028B740=BFT37_s6
-s 0x0028B7F8=BFT37_s4
-s 0x0028B84C=BFT37_s1
-s 0x0028BA86=BFTxx_s4_28BA86
-s 0x0028BAC0=BFT38_s3
-s 0x0028BB3C=BFT39_s2
-s 0x0028BC7C=BFT48_s0
-s 0x0028BCCE=BFT48_s2
-s 0x0028BD46=BFT46_s0
-s 0x0028BD86=BFT46_s2
-s 0x0028BDDA=BFT46_s4
-s 0x0028BE22=BFT46_s7
-s 0x0028BE4C=BFT47_s0
-s 0x0028BE9E=BFT47_s2
-s 0x0028BF16=BFT47_s4
-s 0x0028BF56=BFT47_s7
-s 0x0028BF78=BFT49_s0
-s 0x0028BFCE=BFT49_s7
-s 0x0028BFE2=BFT49_s2
-s 0x0028C05E=BFT42_s4
-s 0x0028C098=BFT30_s0
-s 0x0028C122=BFT30_s4
-s 0x0028C17E=BFT30_s2
-s 0x0028C286=BFT30_s5
-s 0x0028C298=BFT30_s7
-s 0x0028C4C6=BFT41_s8
-s 0x0028C73C=BFT41_s3
-s 0x0028C7F2=BFT41_s0
-s 0x0028C7F4=BFT41_s7
-s 0x0028C832=BFT41_s2
-s 0x0028C848=BFT42_s0
-s 0x0028C880=BFT42_s7
-s 0x0028C958=BFT42_s2
-s 0x0028CA0A=BFT43_s0
-s 0x0028CA60=BFT43_s2
-s 0x0028CAE0=BFT44_s0
-s 0x0028CBE2=BFT44_s2
-s 0x0028CD64=BFT45_s0
-s 0x0028CE60=BFT45_s2
-s 0x0028D0DC=BFTxx_s4_28D0DC
-s 0x0028D116=BFT26_s0
-s 0x0028D36C=BFT26_s1
-s 0x0028D568=BFT26_s5
-s 0x0028D59E=BFT26_s3
-s 0x0028D5AE=BFT26_s4
-s 0x0028D624=BFT26_s6
-s 0x0028D8EA=BFT26_s7
-s 0x0028D91E=BFT26_s8
-s 0x0028DC6A=BFT26_s2
-s 0x00291C70=BFT55_s8
-s 0x00291D3C=BFT55_s7
-s 0x00291D56=BFTxx_s4_291D56
-s 0x00291DF2=BFT56_s0
-s 0x00291ED2=BFT56_s2
-s 0x0029200C=BFT57_s0
-s 0x00292062=BFT57_s2
-s 0x00298BEA=BFTxx_s2_298BEA
-s 0x002A3C5C=nullsub_54
-s 0x002A3E1A=BFT215_s0
-s 0x002A3E36=BFT215_s7
-s 0x002A40DE=BFT215_s8
-s 0x002A4182=BFT215_s6
-s 0x002A41E6=BFT215_s2
-s 0x002A53A0=BFT134_s6
-s 0x002A5D98=BFT137_s6
-s 0x002A6698=BFT131_s4
-s 0x002A66AA=BFT131_s5
-s 0x002A685C=BFT131_s6
-s 0x002A6DA2=BFTxx_s6_2A6DA2
-s 0x002A71E6=BFTxx_s6_2A71E6
-s 0x002A7758=BFT172_s6
-s 0x002A7E88=BFT157_s6
-s 0x002AAB26=BFT193_s6
-s 0x002AB158=BFT197_s6
-s 0x002AB6CC=BFT200_s6
-s 0x002ABA42=BFT203_s6
-s 0x002AC5C8=BFT206_s6
-s 0x002AD8AE=BFTxx_s6_2AD8AE
-s 0x002AEB96=nullsub_55
-s 0x002AEB98=BFT218_s7
-s 0x002AF080=BFT190_s5
-s 0x002AF232=BFT190_s6
-s 0x002AF7D0=BFT176_s6
-s 0x002AFA64=BFT219_s7
-s 0x002AFCE2=BFT220_s3
-s 0x002AFF14=BFTxx_s6_2AFF14
-s 0x002B06C6=BFTxx_s5_2B06C6
-s 0x002B0770=BFTxx_s6_2B0770
-s 0x002B0F96=BFT222_s7
-s 0x002BA074=BFT247_s1
-s 0x002BA38C=BFT248_s1
-s 0x002BA592=BFT247_s7
-s 0x002C04E2=BFTxx_s1_2C04E2
-s 0x002C1318=BFTxx_s1_2C1318
-s 0x002C95A4=BFTxx_s1_2C95A4
-s 0x002C95B2=BFTxx_s1_2C95B2
-s 0x002C95DC=BFT5_s0
-s 0x002C9720=BFT5_s1
-s 0x002ED296=BFTxx_s1_2ED296
-s 0x002F2A0E=nullsub_56
-s 0x002F35A8=BFT134_s1
-s 0x002F35B6=BFT137_s1
-s 0x002F35C4=BFT131_s1
-s 0x002F35D2=BFTxx_s1_2F35D2
-s 0x002F35E0=BFTxx_s1_2F35E0
-s 0x002F360A=BFT157_s1
-s 0x002F3618=BFT193_s1
-s 0x002F3626=BFT197_s1
-s 0x002F3634=BFT200_s1
-s 0x002F3642=BFT203_s1
-s 0x002F3650=BFT209_s1
-s 0x002F365E=BFT206_s1
-s 0x002F366C=BFTxx_s1_2F366C
-s 0x002F367A=BFT216_s0
-s 0x002F3688=BFT216_s2
-s 0x002F3696=BFT217_s0
-s 0x002F36A4=BFT217_s2
-s 0x002F36B2=BFT218_s0
-s 0x002F36C0=BFT218_s2
-s 0x002F36CE=BFT190_s1
-s 0x002F36DC=BFT176_s1
-s 0x002F36EA=BFT219_s0
-s 0x002F36F8=BFT219_s2
-s 0x002F3706=BFT220_s0
-s 0x002F3714=BFT220_s2
-s 0x002F3722=BFT166_s1
-s 0x002F373E=BFT222_s0
-s 0x002F374C=BFT222_s2
-s 0x002F378C=BFT389_s1
-s 0x002F379A=BFT389_s0
-s 0x002F37A8=BFT389_s2
-s 0x002F3DB6=setJpegImageSize
-s 0x002F3DD0=getJpegImageSize
-s 0x002F3DDE=setImageQualityMode
-s 0x002F3DF8=getImageQualityMode
-s 0x002F3E06=setActiveDLighting
-s 0x002F3E20=getActiveDLighting
-s 0x002F78E4=BFT331_s0
-s 0x002F794C=BFT331_s8
-s 0x002F79C6=BFT332_s0
-s 0x002F7A4E=BFT332_s6
-s 0x002F7ABA=BFT332_s2
-s 0x002F7B94=BFT331_s2
-s 0x002F7C60=BFT335_s0
-s 0x002F7CBE=BFT335_s3
-s 0x002F7CCC=BFT335_s6
-s 0x002F7F0C=BFT335_s2
-s 0x002F85C4=BFT337_s0
-s 0x002F8628=BFT337_s2
-s 0x002F88C6=BFT330_s0
-s 0x002F88C8=BFTxx_s4_2F88C8
-s 0x002FA0D4=BFT382_s0
-s 0x002FA0E2=BFT382_s8
-s 0x002FA152=BFT382_s3
-s 0x002FA168=BFT354_s0
-s 0x002FA18E=BFT354_s3
-s 0x002FA1B2=BFT354_s4
-s 0x002FA1C6=BFT354_s6
-s 0x002FA26C=BFT355_s0
-s 0x002FA27A=BFT355_s1
-s 0x002FAA38=BFT356_s0
-s 0x002FAAAA=BFT356_s2
-s 0x002FAB64=BFT357_s0
-s 0x002FABC2=BFT357_s2
-s 0x002FC6F6=BFT370_s0
-s 0x002FC704=BFT370_s1
-s 0x0030233C=BFTxx_s5_30233C
-s 0x00307936=BFTxx_s1_307936
-s 0x00307AF2=BFTxx_s6_307AF2
-s 0x003089CC=BFT335_s1
-s 0x00350D5A=nullsub_62
-s 0x00885C5E=nullsub_58
-s 0x008863FA=nullsub_59
-s 0x0088D0C8=check_600000
-s 0x8FA00000=Sum_RAM
-s 0x8FA00022=Sum_MainRom
-s 0x8FA00042=Flash_AutoSelect
-s 0x8FA00076=reg_138_xx
-s 0x8FA0008E=flash_firmware_xx
-s 0x8FA0042C=EmbeddedFlashClear_xx
-s 0x8FA00518=EmbeddedFlashWrite
-s 0x8FA005CC=Flash_SignleByteProgram_0
-s 0x8FA00700=Flash_ClearSector
-s 0x8FA00776=Flash_SignleByteProgram
-s 0x8FA007EC=Flash_Poll_DQ3_xx
-s 0x8FA00828=Flash_ResetCommand
-s 0x8FA00AE2=nullsub_61

# data
-s 0x000EB540=tblTaskData
-s 0x0020FE14=ptpTableCodeFCxx
-s 0x00210D50=ptpTableCode91xx
-s 0x00210D68=ptpTableCode98xx
-s 0x00210D90=ptpTableCode9000_92xx
-s 0x00210E00=ptpTableCode10xx
-s 0x00211030=ptpTableCode90E8_90FE
-s 0x0022E508=txSetsTable
-s 0x0022F144=NOP_VIVID
-s 0x004553D0=textTableEnglish
-s 0x00455994=helpTextTableEnglish
-s 0x00455C7C=dialogTextTableEnglish
-s 0x00455D18=menuTextTableEnglish
-s 0x68000800=pCurrentTCB
-s 0x8FA9CF78=txSet3E
-s 0x8FA9CFA4=txSet2E
-s 0x8FA9CFE4=txSet2F
-s 0x8FA9D024=txSet30
-s 0x8FA9D064=txSet22
-s 0x8FA9D160=txSet0A
-s 0x8FA9D168=txSet43
-s 0x8FA9D178=txSet40
-s 0x8FA9D17A=txSet38
-s 0x8FA9D17C=txSet10
-s 0x8FA9D17E=txSet0F
-s 0x8FA9D188=txSet4F
-s 0x8FA9D284=txSet4C
-s 0x8FA9D285=txSet4B
-s 0x8FA9D286=txSet4A
-s 0x8FA9D310=txSet49
-s 0x8FA9D390=txSet48
-s 0x8FA9D396=txSet47
-s 0x8FA9D397=txSet46
-s 0x8FA9D39A=txSet45
-s 0x8FA9D3CC=txSet44
-s 0x8FA9D3D0=txSet42
-s 0x8FA9D3D3=txSet41
-s 0x8FA9D3D6=txSet3D
-s 0x8FA9D41C=txSet3C
-s 0x8FA9D436=txSet3B
-s 0x8FA9D438=txSet3A
-s 0x8FA9D439=txSet39
-s 0x8FA9D43A=txSet37
-s 0x8FA9D43B=txSet36
-s 0x8FA9D43C=txSet35
-s 0x8FA9D43D=txSet34
-s 0x8FA9D43E=txSet33
-s 0x8FA9D44B=txSet32
-s 0x8FA9D44E=txSet31
-s 0x8FA9D44F=txSet2D
-s 0x8FA9D479=txSet2C
-s 0x8FA9D484=txSet2B
-s 0x8FA9D48F=txSet2A
-s 0x8FA9D492=txSet29
-s 0x8FA9D495=txSet28
-s 0x8FA9D497=txSet27
-s 0x8FA9D4BC=txSet26
-s 0x8FA9D4DA=txSet25
-s 0x8FA9D507=txSet24
-s 0x8FA9D52F=txSet23
-s 0x8FA9D543=txSet21
-s 0x8FA9D544=txSet20
-s 0x8FA9D640=txSet1F
-s 0x8FA9D73C=txSet1E
-s 0x8FA9D73D=txSet1C
-s 0x8FA9D73F=txSet1B
-s 0x8FA9D7CB=txSet1A
-s 0x8FA9D7DD=txSet19
-s 0x8FA9D7DE=txSet18
-s 0x8FA9D7E1=txSet17
-s 0x8FA9D7E2=txSet16
-s 0x8FA9D7E6=txSet15
-s 0x8FA9D7FD=txSet14
-s 0x8FA9D80B=txSet13
-s 0x8FA9D819=txSet12
-s 0x8FA9D823=txSet11
-s 0x8FA9D82D=txSet0E
-s 0x8FA9D830=txSet0D
-s 0x8FA9D831=txSet0C
-s 0x8FA9D835=txSet0B
-s 0x8FA9D83C=txSet09
-s 0x8FA9D842=txSet08
-s 0x8FA9D857=txSet07
-s 0x8FA9D86C=txSet06
-s 0x8FA9D892=txSet05
-s 0x8FA9D8D0=txSet04
-s 0x8FA9D8E8=txSet03
-s 0x8FA9D8F2=txSet02
-s 0x8FA9D8F8=txSet01
-s 0x8FAECFB9=txSet4E
-s 0x8FAEDA04=currentMenuPointer
-s 0x8FBF0AA8=rootMenu0
-s 0x8FBF0AE8=rootMenu1
-s 0x8FBF0C58=rootMenu2
-s 0x8FBF10B8=rootMenu3
-s 0x8FBF1228=rootMenu4
-s 0x8FBF1FF8=rootMenu5
-s 0x8FBF2AA8=rootMenu6
-s 0x8FBF2B28=rootMenu7
-s 0x8FBF2B88=rootMenu8
-s 0x8FBF4B58=rootMenu9
-s 0x8FBF4BA8=rootMenu10
-s 0x8FBF5338=rootMenu11
-s 0x8FBF59E8=rootMenu12
-s 0x8FBF5AD8=rootMenu13
-s 0x8FBF5BD8=rootMenu14_Playback
-s 0x8FBF63B8=rootMenu15
-s 0x8FBF63F8=rootMenu16
-s 0x8FBF6438=rootMenu17
-s 0x8FBF72D8=rootMenu18
-s 0x8FBF73C8=rootMenu19_Retouch
-s 0x8FBF6498=rootMenu20_Shooting
-s 0x8FBF8EB8=rootMenu21_Setup
-s 0x8FBF87A8=rootMenu22
-s 0x8FBFB028=BFTDataV2C
