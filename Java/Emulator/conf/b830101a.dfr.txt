# The main part of this file describes the D3200 "B" firmware, ver 1.01a
# Two special parts are also included but commented out :
# - the ROM part at 0x000E0000
#
# Use in Emulator or
# startDfr.bat -wstructure -wparameters -wint40 -wmemory -waddress -whexcode -x b830101a.dfr.txt -o b830101a.asm b830101a.bin

############################### File map:
-i 0x00040000-0x00AAFFFF=0x00000000

############################### Memory map:

-m 0x00040000-0x00040B53=CODE


# Table of offsets used by INT 0x40 :
-m 0x00040B54-0x00040CB3=DATA:W

-m 0x00040CB4-0x00040D91=CODE

# Softune RTOS Copyright :
-m 0x00040D92-0x00040DFD=DATA:L

# ITRON kernel code
-m 0x00040DFE-0x0008C645=CODE

# tblTaskData
-m 0x000D3468-0x000D3CD7=DATA:L



# Interrupt vector table.
-t 0x000DFC00


-m 0x00100000-0x0026C6BB=CODE

-m 0x0036D646-0x004356D3=CODE

-m 0x00565E28-0x00573055=CODE

############################### Symbols

# syscalls
-s 0x40CB4=sys_unsupported_function (R12 [OUT err_code])
-s 0x40CB8=sys_reserved_function (R12 [OUT err_code])
-s 0x41532=sys_set_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Set System Clock */)
-s 0x41550=sys_get_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Get System Clock */)
-s 0x4156E=sys_dly_tsk(R4 [IN dly_tim], R12 [OUT err_code] /* Delay Task */)
-s 0x415CA=sys_def_cyc(R4 [IN cycno], R5 [IN ptr_to_pk_dcyc], R12 [OUT err_code] /* Define Cyclic Handler */)
-s 0x41648=sys_act_cyc(R4 [IN cycno], R5 [IN cycact], R12 [OUT err_code] /* Activate Cyclic Handler */)
-s 0x416AE=sys_ref_cyc(R5 [IN ptr_to_pk_rcyc], R5 [IN cycno], R12 [OUT err_code] /* Get Cyclic Handler Status */)
-s 0x41730=sys_def_alm(R4 [IN almno], R5 [IN ptr_to_pk_dalm], R12 [OUT err_code] /* Define Alarm Handler */)
-s 0x417BE=sys_ref_alm(R4 [IN ptr_to_pk_ralm], R5 [IN almno], R12 [OUT err_code] /* Get Alarm Handler Status */)
-s 0x41830=sys_sus_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Suspend Other Task */)
-s 0x418B4=sys_rsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Resume Suspended Task */)
-s 0x4193C=sys_frsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Forcibly Resume suspended Task */)
-s 0x4199C=sys_slp_tsk(R12 [OUT err_code] /* Sleep Task */)
-s 0x419D2=sys_tslp_tsk(R4 [IN timeout], R12 [OUT err_code] /* Sleep Task with Timeout */)
-s 0x41A56=sys_wup_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Wakeup Other Task */)
-s 0x41AB8=sys_can_wup(R4 [IN tsk_id], R12 [OUT err_code], R13 [OUT wakeup_count] /* Cancel Wakeup Request */)
-s 0x41B1C=sys_sta_tsk(R4 [IN tsk_id], R5 [IN tsk_param], R12 [OUT err_code] /* Start Task */)
-s 0x41B9A=sys_ext_tsk(R12 [OUT err_code] /* Exit Issuing Task */)
-s 0x41BF4=sys_ter_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Terminate Other Task */)
-s 0x41C92=sys_dis_dsp(R12 [OUT err_code] /* Disable Dispatch */)
-s 0x41CB4=sys_ena_dsp(R12 [OUT err_code] /* Enable Dispatch */)
-s 0x41CD0=sys_chg_pri(R4 [IN tsk_id], R5 [IN tsk_prio], R12 [OUT err_code] /* Change Task Priority */)
-s 0x41D38=sys_rot_rdq(R4 [IN tsk_prio], R12 [OUT err_code] /* Rotate Tasks on the Ready Queue */)
-s 0x41D9E=sys_rel_wai(R4 [IN tsk_id], R12 [OUT err_code] /* Release Wait of Other Task */)
-s 0x41E20=sys_get_tid(R12 [OUT err_code], R13 [OUT tsk_id] /* Get Task Identifier */)
-s 0x41E40=sys_ref_tsk(R4 [IN ptr_to_pk_rtsk], R5 [IN tsk_id], R12 [OUT err_code] /* Get Task Status */)
-s 0x41F14=sys_sig_sem(R4 [IN sem_id], R12 [OUT err_code] /* Signal Semaphore */)
-s 0x41F56=sys_wai_sem(R4 [IN sem_id], R12 [OUT err_code] /* Wait on Semaphore */)
-s 0x41F98=sys_preq_sem(R4 [IN sem_id], R12 [OUT err_code] /* Poll and request Semaphore */)
-s 0x41FCC=sys_twai_sem(R4 [IN sem_id], R5 [IN timeout], R12 [OUT err_code] /* Wait on Semaphore with Timeout */)
-s 0x42052=sys_ref_sem(R4 [IN ptr_to_pk_rsem], R5 [IN sem_id], R12 [OUT err_code] /* Get Semaphore Status */)
-s 0x4209C=sys_set_flg(R4 [IN flag_id], R5 [IN set_pattern], R12 [OUT err_code] /* Set Eventflag */)
-s 0x42136=sys_clr_flg(R4 [IN flag_id], R5 [IN clr_pattern], R12 [OUT err_code] /* Clear Eventflag */)
-s 0x4215E=sys_wai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag */)
-s 0x421E6=sys_pol_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag, polling */)
-s 0x4223E=sys_twai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [IN timeout; OUT flag_pattern] /* Wait for Eventflag, with Timeout */)
-s 0x422FC=sys_ref_flg(R4 [IN ptr_to_pk_rflg], R5 [IN flag_id], R12 [OUT err_code] /* Get Eventflag Status */)
-s 0x42332=sys_snd_msg(R4 [IN mailbox_id], R5 [IN ptr_to_pk_msg], R12 [OUT err_code] /* Send Message to Mailbox */)
-s 0x4238C=sys_rcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox */)
-s 0x423DC=sys_prcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, polling */)
-s 0x4242A=sys_trcv_msg(R5 [IN mailbox_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, with Timeout */)
-s 0x424AC=sys_ref_mbx(R4 [IN ptr_to_pk_rmbx], R5 [IN mailbox_id], R12 [OUT err_code] /* Get Mailbox Status */)
-s 0x42530=sys_get_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block */)
-s 0x42624=sys_pget_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block, polling */)
-s 0x42724=sys_rel_blk(R4 [IN mempool_id], R5 [OUT blk_start], R12 [OUT err_code] /* Release Variable-Sized Memory Block */)
-s 0x428E2=sys_ref_mpl(R4 [IN ptr_to_pk_rmempool], R5 [IN mempool_id], R12 [OUT err_code] /* Get Variable-Sized Memorypool Status */)
-s 0x4295C=sys_get_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block */)
-s 0x429B8=sys_pget_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Poll and Get Fixed-Sized Memory Block */)
-s 0x429FC=sys_tget_blf(R5 [IN mempool_f_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block with Timeout */)
-s 0x42A9E=sys_rel_blf(R4 [IN mempool_f_id], R5 [OUT blk_f_start], R12 [OUT err_code] /* Release Fixed-Sized Memory Block */)
-s 0x42B6C=sys_ref_mpf(R4 [IN ptr_to_pk_rmempool_f], R5 [IN mempool_f_id], R12 [OUT err_code] /* Get Fixed-Sized Memorypool Status */)
-s 0x42BA8=sys_loc_cpu(R12 [OUT err_code] /* Lock CPU */)
-s 0x42BBC=sys_unl_cpu(R12 [OUT err_code] /* Unlock CPU */)
-s 0x42BD0=sys_chg_ilm(R4 [IN ilmask], R12 [OUT err_code] /* Change Interrupt Level Mask */)
-s 0x42BF8=sys_ref_ilm(R12 [OUT err_code], R13 [OUT ilmask] /* Get Interrupt Level Mask */)
-s 0x42C1C=sys_get_ver(R4 [IN ptr_to_pk_ver], R12 [OUT err_code] /* Get Version Information */)
-s 0x42C58=sys_ref_sys(R4 [IN ptr_to_pk_rsys], R12 [OUT err_code] /* Get System Status */)

# tasks
-s 0x40F00=SetupTCB
-s 0x40DFE=StartIdleTask

-s 0x151F38=task_0x01
-s 0x18E17E=task_0x02
-s 0x250B12=task_0x03
-s 0x1A40EC=task_0x04
-s 0x19FAB8=task_0x05
-s 0x1BAC50=task_0x06
-s 0x1BBF5A=task_0x07
-s 0x1BC4BA=task_0x08
-s 0x241960=task_0x09
-s 0x1A925A=task_0x0A
-s 0x1AB2B6=task_0x0B
-s 0x1A6C1C=task_0x0C
-s 0x1A65C6=task_0x0D
-s 0x1A462C=task_0x0E
-s 0x1AB9EA=task_0x0F
-s 0x1ABF72=task_0x10
-s 0x1AC4FA=task_0x11
-s 0x23416E=task_0x12
-s 0x234424=task_0x13
-s 0x1A2C78=task_0x14
-s 0x1A3550=task_0x15
-s 0x16FDEE=task_0x16
-s 0x18DBBC=task_0x17
-s 0x133FA4=task_0x18
-s 0x1C67C0=task_0x19
-s 0x131B6C=task_0x1A
-s 0x100108=task_0x1B( /* Autorun */)
-s 0x122DBC=task_0x1C
-s 0x126B74=task_0x1D
-s 0x230E8E=task_0x1E
-s 0x2307A2=task_0x1F
-s 0x19420C=task_0x20
-s 0x1278B6=task_0x21
-s 0x24277E=task_0x22
-s 0x1D3CC8=task_0x23
-s 0x22B1AC=task_0x24
-s 0x22A016=task_0x25
-s 0x43824=task_0x26
-s 0x1861D4=task_0x27
-s 0x23F646=task_0x28
-s 0x23F686=task_0x29
-s 0x23D90E=task_0x2A
-s 0x186DEC=task_0x2B
-s 0x187592=task_0x2C
-s 0x1B81C4=task_0x2D
-s 0x1C1F60=task_0x2E
-s 0x240BDE=task_0x2F
-s 0x1BC87A=task_0x30
-s 0x240F62=task_0x31
-s 0x112D52=task_0x32
-s 0x116B48=task_0x33
-s 0x10E334=task_0x34
-s 0x18EA54=task_0x35
-s 0x14EB22=task_0x36
-s 0x3B9200=task_0x37
-s 0x3F880A=task_0x38
-s 0x18F0EC=task_0x39
-s 0x140F22=task_0x3A
-s 0x1B1288=task_0x3B
-s 0x14CEC2=task_0x3C
-s 0x14CF22=task_0x3D
-s 0x22E0A4=task_0x3E
-s 0x632C0=task_0x3F
-s 0x6251E=task_0x40
-s 0x692D8=task_0x41
-s 0x69320=task_0x42
-s 0x69290=task_0x43
-s 0x6D982=task_0x44
-s 0x5FB7C=task_0x45
-s 0x5E5EC=task_0x46
-s 0x5B9D2=task_0x47
-s 0x1B14A6=task_0x48
-s 0x1B14A4=task_0x49
-s 0x228114=task_0x4A
-s 0x24B7B8=task_0x4B
-s 0x24C916=task_0x4C
-s 0x24E7FE=task_0x4D

# for Emulator
-s 0xD3468=tblTaskData
-s 0x68000910=pCurrentTCB

# other
-s 0x101F48=LoadLanguage(R4 [IN index])
