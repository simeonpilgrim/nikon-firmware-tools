# The main part of this file describes the D300s "B" firmware, ver 1.01b
# Two special parts are also included but commented out :
# - the ROM part at 0x000E0000
#
# Use in Emulator or
# startDfr.bat -wstructure -wparameters -wint40 -wmemory -waddress -whexcode -x b810101b.dfr.txt -o b810101b.asm b810101b.bin

############################### File map:
-i 0x00040000-0x0073FFFF=0x00000000

############################### Memory map:

-m 0x00040000-0x000404FF=CODE


# Table of offsets used by INT 0x40 :
-m 0x00040500-0x0004065F=DATA:W

-m 0x00040660-0x0004073D=CODE

# Softune RTOS Copyright :
-m 0x0004073E-0x000407A9=DATA:L

# ITRON kernel code
-m 0x000407AA-0x00050E51=CODE

# tblTaskData
-m 0x00063EF0-0x00064337=DATA:L

# FotoNations Copyright
-m 0x00054B70-0x00054BC7=DATA:L
-m 0x00054BC8-0x00063EE3=CODE

# Interrupt vector table.
-t 0x000EFC00


-m 0x00120000-0x001E9FDD=CODE

-m 0x00222044-0x002CB2B3=CODE

############################### Symbols

# syscalls
-s 0x40660=sys_unsupported_function (R12 [OUT err_code])
-s 0x40664=sys_reserved_function (R12 [OUT err_code])
-s 0x40EDE=sys_set_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Set System Clock */)
-s 0x40EFC=sys_get_tim(R4 [IN ptr_to_pk_tim], R12 [OUT err_code] /* Get System Clock */)
-s 0x40F1A=sys_dly_tsk(R4 [IN dly_tim], R12 [OUT err_code] /* Delay Task */)
-s 0x40F76=sys_def_cyc(R4 [IN cycno], R5 [IN ptr_to_pk_dcyc], R12 [OUT err_code] /* Define Cyclic Handler */)
-s 0x40FF4=sys_act_cyc(R4 [IN cycno], R5 [IN cycact], R12 [OUT err_code] /* Activate Cyclic Handler */)
-s 0x4105A=sys_ref_cyc(R5 [IN ptr_to_pk_rcyc], R5 [IN cycno], R12 [OUT err_code] /* Get Cyclic Handler Status */)
-s 0x410DC=sys_def_alm(R4 [IN almno], R5 [IN ptr_to_pk_dalm], R12 [OUT err_code] /* Define Alarm Handler */)
-s 0x4116A=sys_ref_alm(R4 [IN ptr_to_pk_ralm], R5 [IN almno], R12 [OUT err_code] /* Get Alarm Handler Status */)
-s 0x411DC=sys_sus_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Suspend Other Task */)
-s 0x41260=sys_rsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Resume Suspended Task */)
-s 0x412E8=sys_frsm_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Forcibly Resume suspended Task */)
-s 0x41348=sys_slp_tsk(R12 [OUT err_code] /* Sleep Task */)
-s 0x4137E=sys_tslp_tsk(R4 [IN timeout], R12 [OUT err_code] /* Sleep Task with Timeout */)
-s 0x41402=sys_wup_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Wakeup Other Task */)
-s 0x41464=sys_can_wup(R4 [IN tsk_id], R12 [OUT err_code], R13 [OUT wakeup_count] /* Cancel Wakeup Request */)
-s 0x414C8=sys_sta_tsk(R4 [IN tsk_id], R5 [IN tsk_param], R12 [OUT err_code] /* Start Task */)
-s 0x41546=sys_ext_tsk(R12 [OUT err_code] /* Exit Issuing Task */)
-s 0x415A0=sys_ter_tsk(R4 [IN tsk_id], R12 [OUT err_code] /* Terminate Other Task */)
-s 0x4163E=sys_dis_dsp(R12 [OUT err_code] /* Disable Dispatch */)
-s 0x41660=sys_ena_dsp(R12 [OUT err_code] /* Enable Dispatch */)
-s 0x4167C=sys_chg_pri(R4 [IN tsk_id], R5 [IN tsk_prio], R12 [OUT err_code] /* Change Task Priority */)
-s 0x416E4=sys_rot_rdq(R4 [IN tsk_prio], R12 [OUT err_code] /* Rotate Tasks on the Ready Queue */)
-s 0x4174A=sys_rel_wai(R4 [IN tsk_id], R12 [OUT err_code] /* Release Wait of Other Task */)
-s 0x417CC=sys_get_tid(R12 [OUT err_code], R13 [OUT tsk_id] /* Get Task Identifier */)
-s 0x417EC=sys_ref_tsk(R4 [IN ptr_to_pk_rtsk], R5 [IN tsk_id], R12 [OUT err_code] /* Get Task Status */)
-s 0x418C0=sys_sig_sem(R4 [IN sem_id], R12 [OUT err_code] /* Signal Semaphore */)
-s 0x41902=sys_wai_sem(R4 [IN sem_id], R12 [OUT err_code] /* Wait on Semaphore */)
-s 0x41944=sys_preq_sem(R4 [IN sem_id], R12 [OUT err_code] /* Poll and request Semaphore */)
-s 0x41978=sys_twai_sem(R4 [IN sem_id], R5 [IN timeout], R12 [OUT err_code] /* Wait on Semaphore with Timeout */)
-s 0x419FE=sys_ref_sem(R4 [IN ptr_to_pk_rsem], R5 [IN sem_id], R12 [OUT err_code] /* Get Semaphore Status */)
-s 0x41A48=sys_set_flg(R4 [IN flag_id], R5 [IN set_pattern], R12 [OUT err_code] /* Set Eventflag */)
-s 0x41AE2=sys_clr_flg(R4 [IN flag_id], R5 [IN clr_pattern], R12 [OUT err_code] /* Clear Eventflag */)
-s 0x41B0A=sys_wai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag */)
-s 0x41B92=sys_pol_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [OUT flag_pattern] /* Wait for Eventflag, polling */)
-s 0x41BEA=sys_twai_flg(R5 [IN flag_id], R6 [IN wai_pattern], R7 [IN wait_flag_mode], R12 [OUT err_code], R13 [IN timeout; OUT flag_pattern] /* Wait for Eventflag, with Timeout */)
-s 0x41CA8=sys_ref_flg(R4 [IN ptr_to_pk_rflg], R5 [IN flag_id], R12 [OUT err_code] /* Get Eventflag Status */)
-s 0x41CDE=sys_snd_msg(R4 [IN mailbox_id], R5 [IN ptr_to_pk_msg], R12 [OUT err_code] /* Send Message to Mailbox */)
-s 0x41D38=sys_rcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox */)
-s 0x41D88=sys_prcv_msg(R5 [IN mailbox_id], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, polling */)
-s 0x41DD6=sys_trcv_msg(R5 [IN mailbox_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT ptr_to_pk_msg] /* Receive Message from Mailbox, with Timeout */)
-s 0x41E58=sys_ref_mbx(R4 [IN ptr_to_pk_rmbx], R5 [IN mailbox_id], R12 [OUT err_code] /* Get Mailbox Status */)
-s 0x41EDC=sys_get_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block */)
-s 0x41FD0=sys_pget_blk(R5 [IN mempool_id], R6 [IN blk_size], R12 [OUT err_code], R13 [OUT blk_start] /* Get Variable-Sized Memory Block, polling */)
-s 0x420D0=sys_rel_blk(R4 [IN mempool_id], R5 [OUT blk_start], R12 [OUT err_code] /* Release Variable-Sized Memory Block */)
-s 0x4228E=sys_ref_mpl(R4 [IN ptr_to_pk_rmempool], R5 [IN mempool_id], R12 [OUT err_code] /* Get Variable-Sized Memorypool Status */)
-s 0x42308=sys_get_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block */)
-s 0x42364=sys_pget_blf(R5 [IN mempool_f_id], R12 [OUT err_code], R13 [OUT blk_f_start] /* Poll and Get Fixed-Sized Memory Block */)
-s 0x423A8=sys_tget_blf(R5 [IN mempool_f_id], R6 [IN timeout], R12 [OUT err_code], R13 [OUT blk_f_start] /* Get Fixed-Sized Memory Block with Timeout */)
-s 0x4244A=sys_rel_blf(R4 [IN mempool_f_id], R5 [OUT blk_f_start], R12 [OUT err_code] /* Release Fixed-Sized Memory Block */)
-s 0x42518=sys_ref_mpf(R4 [IN ptr_to_pk_rmempool_f], R5 [IN mempool_f_id], R12 [OUT err_code] /* Get Fixed-Sized Memorypool Status */)
-s 0x42554=sys_loc_cpu(R12 [OUT err_code] /* Lock CPU */)
-s 0x42568=sys_unl_cpu(R12 [OUT err_code] /* Unlock CPU */)
-s 0x4257C=sys_chg_ilm(R4 [IN ilmask], R12 [OUT err_code] /* Change Interrupt Level Mask */)
-s 0x425A4=sys_ref_ilm(R12 [OUT err_code], R13 [OUT ilmask] /* Get Interrupt Level Mask */)
-s 0x425C8=sys_get_ver(R4 [IN ptr_to_pk_ver], R12 [OUT err_code] /* Get Version Information */)
-s 0x42604=sys_ref_sys(R4 [IN ptr_to_pk_rsys], R12 [OUT err_code] /* Get System Status */)

-s 0x408AC=SetupTCB
-s 0x407AA=StartIdleTask

-s 0x15E50E=task_0x01
-s 0x1200AC=task_0x02( /* Autorun */)
-s 0x12F872=task_0x03
-s 0x127990=task_0x04
-s 0x130CAE=task_0x05
-s 0x1283BE=task_0x06
-s 0x18D7EE=task_0x07
-s 0x189074=task_0x08
-s 0x13A4F6=task_0x09
-s 0x133174=task_0x0A
-s 0x133182=task_0x0B
-s 0x133B4A=task_0x0C
-s 0x133B58=task_0x0D
-s 0x134018=task_0x0E
-s 0x134026=task_0x0F
-s 0x13351A=task_0x10
-s 0x1342A0=task_0x11
-s 0x173310=task_0x12
-s 0x15805C=task_0x13
-s 0x13CE22=task_0x14
-s 0x1B0FB6=task_0x15
-s 0x1B2C2E=task_0x16
-s 0x16E9FC=task_0x17
-s 0x29E4AE=task_0x18
-s 0x1B318E=task_0x19
-s 0x1B0C88=task_0x1A
-s 0x16CAAA=task_0x1B
-s 0x16CB0A=task_0x1C
-s 0x1CFA8E=task_0x1D
-s 0x1D1596=task_0x1E
-s 0x1D5622=task_0x1F
-s 0x1C6B60=task_0x20
-s 0x18B698=task_0x21
-s 0x235B2C=task_0x22
-s 0x132E58=task_0x23
-s 0x1D2D3E=task_0x24
-s 0x1D4DCE=task_0x25
-s 0x1D4754=task_0x26
-s 0x1D4358=task_0x27

# for Emulator
-s 0x63EF0=tblTaskData
-s 0x68000000=pCurrentTCB

# other

# menu
-s 0x1B734A=LoadLanguage(R4 [IN index])

