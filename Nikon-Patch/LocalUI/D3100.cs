namespace Nikon_Patch
{
    class D3100_0101 : Firmware
    {
        Patch[] patch_vid_time = {
            new Patch(1, 0x84C200, new byte[] { 0xE4, 0x02 }, new byte[] { 0xE0, 0x02 }), // unlimited recording 1/2
            new Patch(1, 0x84CD1A, new byte[] { 0xE2, 0x0B }, new byte[] { 0xE0, 0x0B }), // unlimited recording 2/2
                          };

        Patch[] patch_vid_17min = {
            new Patch(1, 0x84C1fA, new byte[] { 0x9B, 0x90, 0x27, 0xC0 }, new byte[] { 0x9B, 0xF0, 0xFF, 0xFF }), // 17:28 limited recording 1/3
            new Patch(1, 0x84C202, new byte[] { 0x9B, 0x94, 0x27, 0xC0 }, new byte[] { 0x9B, 0xF4, 0xFF, 0xFF }), // 17:28 limited recording 2/3
            new Patch(1, 0x84D0D0, new byte[] { 0x9B, 0x91, 0x27, 0xC0 }, new byte[] { 0x9B, 0xF1, 0xFF, 0xFF }), // 17:28 limited recording 3/3
        };


        Patch[] patch_Battery = {
            new Patch(0, 0x8316C, new byte[] { 0xF0, 0x00, 0x2A, 0x1C }, new byte[] { 0x65, 0x00, 0x65, 0x00 }), // non-brand  battery 
            new Patch(0, 0x831C0, new byte[] { 0xF0, 0x00, 0x2A, 0x03 }, new byte[] { 0x65, 0x00, 0x65, 0x00 }), // non-brand  battery
            new Patch(0, 0x83202, new byte[] { 0xF0, 0x00, 0x61, 0x05 }, new byte[] { 0x65, 0x00, 0x65, 0x00 }), // non-brand  battery
            
            new Patch(0, 0x83232, new byte[] { 0xF2, 0x00, 0x73, 0x00, 0xF0 ,0x00, 0x61, 0x0B }, new byte[] { 0xF3, 0x00, 0x73, 0x00, 0xF0, 0x00, 0x60, 0x0F }), // non-brand  battery

            new Patch(0, 0x83C72, new byte[] { 0x6A, 0x00 }, new byte[] { 0x6A, 0x01 }), // non-brand  battery
                                };

        Patch[] patch_manual_lv = {
            new Patch(0, 0x031FF8, new byte[] { 0xA4, 0x62 } , new byte[] { 0x6B, 0x04 } ),
                                };

        public D3100_0101()
        {
            p = new Package();
            Model = "D3100";
            Version = "1.01";

            //Patches.Add(new PatchSet("Remove Time Based Video Restrictions", patch_vid_time, patch_vid_17min));
            Patches.Add(new PatchSet(PatchLevel.Released, "Change Time Based Video Restrictions to 17:28", patch_vid_17min));
            Patches.Add(new PatchSet(PatchLevel.Released, "Non-brand Battery", patch_Battery));
            Patches.Add(new PatchSet(PatchLevel.Beta, "ISO/Shutter Lv Patch", patch_manual_lv));

        }
    }


    class D3100_0102 : Firmware
    {
        Patch[] patch_Battery = {
            new Patch(0, 0x08224E, new byte[] { 0xF0, 0x28, 0xA2, 0x52, 0xF0, 0x60 } , new byte[] { 0x6A, 0x20, 0x6A, 0x20, 0x6A, 0x20 } ),
            new Patch(0, 0x083610, new byte[] { 0xF0, 0x28, 0xA4, 0x92 } , new byte[] { 0x6C, 0x20, 0x6C, 0x20 } ),
                                };
        
        Patch[] patch_vid_17min = {
            new Patch(1, 0x84C1FB, new byte[] { 0x90, 0x27, 0xC0 } , new byte[] { 0xF0, 0xFF, 0xFF } ),
            new Patch(1, 0x84C203, new byte[] { 0x94, 0x27, 0xC0 } , new byte[] { 0xF4, 0xFF, 0xFF } ),
            new Patch(1, 0x84D0D1, new byte[] { 0x91, 0x27, 0xC0 } , new byte[] { 0xF1, 0xFF, 0xFF } ),
            };

        Patch[] patch_manual_lv = {
            new Patch(0, 0x03202C, new byte[] { 0xA4, 0x62 } , new byte[] { 0x6B, 0x04 } ),
                                };

        Patch[] patch_bitrate_36mbps = {
            new Patch(1, 0x84BCAE, new byte[] { 0x01 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BCB4, new byte[] { 0x01 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BCC2, new byte[] { 0x00 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BCC8, new byte[] { 0x00 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BCD6, new byte[] { 0x00 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BCDC, new byte[] { 0x00 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BD04, new byte[] { 0x00 } , new byte[] { 0x02 } ),
            new Patch(1, 0x84BD0A, new byte[] { 0x00 } , new byte[] { 0x02 } ),
                             };

        Patch[] patch_bitrate_29mbps_playback = {
            new Patch(1, 0x40A501, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x3B, 0x48, 0x51 } ),
            new Patch(1, 0x40A6EC, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x40A6EF, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x40A6F3, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x40A6FE, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x3B, 0x48, 0x51 } ),
            new Patch(1, 0x419B13, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x33, 0x30, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x33, 0x30 } ),
            new Patch(1, 0x419B25, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x419B28, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x419B2C, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x419B37, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x419CE6, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x35, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x35 } ),
            new Patch(1, 0x419CF8, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x419CFB, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x419CFF, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x419D0A, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x41A43B, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x35, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x35 } ),
            new Patch(1, 0x41A452, new byte[] { 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x41A46F, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x2E } ),
            new Patch(1, 0x41A475, new byte[] { 0x20, 0x33, 0x30, 0x20 } , new byte[] { 0x48, 0x51, 0x33, 0x30 } ),
            new Patch(1, 0x428CDD, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x428CE0, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x428CE4, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x428CF0, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x2E } ),
            new Patch(1, 0x428CF6, new byte[] { 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x428EFF, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x35, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x35 } ),
            new Patch(1, 0x428F0C, new byte[] { 0x20, 0x20, 0x36, 0x34, 0x30, 0x78, 0x20, 0x20, 0x34, 0x32, 0x34, 0x3B } , new byte[] { 0x36, 0x34, 0x30, 0x58, 0x34, 0x32, 0x34, 0x3B, 0x20, 0x20, 0x20, 0x20 } ),
            new Patch(1, 0x428F19, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x428F25, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x2E } ),
            new Patch(1, 0x428F2B, new byte[] { 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x429817, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x35, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x35 } ),
            new Patch(1, 0x45B185, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x45B188, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x45B18C, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x45B37C, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20, 0x32, 0x35, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20, 0x48, 0x51, 0x32, 0x35 } ),
            new Patch(1, 0x45B38E, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x45B391, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x45B395, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x45BB46, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x45BB4D, new byte[] { 0x32, 0x35, 0x20 } , new byte[] { 0x20, 0x32, 0x35 } ),
            new Patch(1, 0x45BB7A, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x2E } ),
            new Patch(1, 0x45BB80, new byte[] { 0x20, 0x33, 0x30, 0x20 } , new byte[] { 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x47AA41, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x47AA44, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x47AC08, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x48, 0x51 } ),
            new Patch(1, 0x47AC1C, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x47AC1F, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x47B2AF, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x20, 0x48, 0x51 } ),
            new Patch(1, 0x4B890B, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x4B890E, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x4B8912, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x4B8B5B, new byte[] { 0x20, 0x20 } , new byte[] { 0x34, 0x32 } ),
            new Patch(1, 0x4B8B5E, new byte[] { 0x32, 0x34, 0x3B } , new byte[] { 0x3B, 0x20, 0x20 } ),
            new Patch(1, 0x4B8B62, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x4F2EAB, new byte[] { 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x48, 0x51 } ),
            new Patch(1, 0x4F3025, new byte[] { 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x48, 0x51 } ),
            new Patch(1, 0x4FD7CE, new byte[] { 0x20, 0x34, 0x32, 0x34, 0x3B } , new byte[] { 0x34, 0x32, 0x34, 0x3B, 0x20 } ),
            new Patch(1, 0x4FD7D4, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x4FD7E1, new byte[] { 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x48, 0x51 } ),
            new Patch(1, 0x4FD94F, new byte[] { 0x20, 0x34, 0x32, 0x34, 0x3B } , new byte[] { 0x34, 0x32, 0x34, 0x3B, 0x20 } ),
            new Patch(1, 0x4FD955, new byte[] { 0x32, 0x34, 0x20 } , new byte[] { 0x20, 0x32, 0x34 } ),
            new Patch(1, 0x4FD962, new byte[] { 0x20, 0x37, 0x32, 0x30, 0x3B, 0x20 } , new byte[] { 0x37, 0x32, 0x30, 0x3B, 0x48, 0x51 } ),
            new Patch(1, 0x52B1C7, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x2E } ),
            new Patch(1, 0x52B1CD, new byte[] { 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x48, 0x51, 0x32, 0x34 } ),
            new Patch(1, 0x52B3A9, new byte[] { 0x20, 0x20, 0x37, 0x32, 0x30 } , new byte[] { 0x37, 0x32, 0x30, 0x2E, 0x2E } ),
            new Patch(1, 0x52B3AF, new byte[] { 0x20, 0x32, 0x34, 0x20 } , new byte[] { 0x48, 0x51, 0x32, 0x34 } ),
            
            new Patch(1, 0x84BCAF, new byte[] { 0x4F, 0xB1, 0x80 } , new byte[] { 0xC4, 0x1B, 0x00 } ),
            new Patch(1, 0x84BCB5, new byte[] { 0x12, 0xA8, 0x80 } , new byte[] { 0x98, 0x96, 0x66 } ),
            new Patch(1, 0x84BD04, new byte[] { 0x00, 0x98, 0x96, 0x80 } , new byte[] { 0x01, 0xBF, 0x0C, 0x00 } ),
            new Patch(1, 0x84BD0A, new byte[] { 0x00, 0x7A, 0x12 } , new byte[] { 0x01, 0xBF, 0x0C } ),
            new Patch(1, 0x84BD18, new byte[] { 0x00, 0xB7 } , new byte[] { 0x01, 0xD7 } ),
            new Patch(1, 0x84BD1E, new byte[] { 0x00 } , new byte[] { 0x01 } ),
            new Patch(1, 0x84BD4E, new byte[] { 0x00 } , new byte[] { 0x01 } ),
            new Patch(1, 0x84BD54, new byte[] { 0x00 } , new byte[] { 0x01 } ),
                            };

        Patch[] patch_bitrate_54mbps = {
            new Patch(1, 0x84BCAE, new byte[] { 0x01 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BCB4, new byte[] { 0x01 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BCC2, new byte[] { 0x00 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BCC8, new byte[] { 0x00 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BCD6, new byte[] { 0x00 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BCDC, new byte[] { 0x00 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BD04, new byte[] { 0x00 } , new byte[] { 0x03 } ),
            new Patch(1, 0x84BD0A, new byte[] { 0x00 } , new byte[] { 0x03 } ),
                             };

        Patch[] patch_bitrate_64mbps = {
            new Patch(1, 0x84BCAE, Sys.mbps22 , Sys.mbps64 ),
            new Patch(1, 0x84BCB4, Sys.mbps18 , Sys.mbps60  ),
            new Patch(1, 0x84BCC2, Sys.mbps12 , Sys.mbps64 ),
            new Patch(1, 0x84BCC8, Sys.mbps8 , Sys.mbps60 ),
            new Patch(1, 0x84BCD6, Sys.mbps12 , Sys.mbps64 ),
            new Patch(1, 0x84BCDC, Sys.mbps8 , Sys.mbps60 ),
                             };

        public D3100_0102()
        {
            p = new Package();
            Model = "D3100";
            Version = "1.02";

            Patches.Add(new PatchSet(PatchLevel.Released, "Change Time Based Video Restrictions to 17:28", patch_vid_17min));
            Patches.Add(new PatchSet(PatchLevel.Released, "Non-brand Battery", patch_Battery));
            Patches.Add(new PatchSet(PatchLevel.Released, "ISO/Shutter Lv Patch", patch_manual_lv));

            Patches.Add(new PatchSet(PatchLevel.Released, "Video 1080 HQ 36mbps Bit-rate", patch_bitrate_36mbps, patch_bitrate_54mbps, patch_bitrate_29mbps_playback, patch_bitrate_64mbps));
            Patches.Add(new PatchSet(PatchLevel.Released, "Video 1080 HQ 54mbps Bit-rate", patch_bitrate_54mbps, patch_bitrate_36mbps, patch_bitrate_29mbps_playback, patch_bitrate_64mbps));
            Patches.Add(new PatchSet(PatchLevel.Beta, "Video 1080 HQ 64mbps Bit-rate", patch_bitrate_64mbps, patch_bitrate_54mbps, patch_bitrate_36mbps, patch_bitrate_29mbps_playback));
            Patches.Add(new PatchSet(PatchLevel.Released, "Video HQ 29Mbps with playback", patch_bitrate_29mbps_playback, patch_bitrate_36mbps, patch_bitrate_54mbps, patch_bitrate_64mbps));
        }
    }

}
